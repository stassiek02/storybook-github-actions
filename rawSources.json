{"files":{"home/home.stories.jsx":{"raw":"import React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { linkTo } from '@storybook/addon-links'\n\nimport imageFile from './frontpage.jpg'\n\nconst image = {\n  src: imageFile,\n  alt: 'my image',\n}\n\nstoriesOf('home', module)\n  .add('welcome!', () => (\n    <button\n      href=\"#\"\n      style={{\n        maxWidth: '85%',\n        maxHeight: '85%',\n        display: 'block',\n        textDecoration: 'none',\n        cursor: 'pointer',\n        border: 'none',\n      }}\n      onClick={linkTo('home', 'instructions')}\n    >\n      <img style={{ maxWidth: '100%' }} src={image.src} alt={image.alt} />\n    </button>\n  ))\n  .add('instructions', () => (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        textAlign: 'center',\n      }}\n    >\n      <p>\n        Welcome to (some of) the training materials for{' '}\n        <a href=\"http://edument.se\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Edument\n        </a>\n        &apos;s course in{' '}\n        <a\n          href=\"https://edument.se/en/education/categories/web-development-courses/advanced-react\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Advanced React\n        </a>\n        !\n      </p>\n      <p>\n        There&apos;ll be more thorough instructions here eventually; for now,\n        see the README file in the{' '}\n        <a\n          href=\"https://github.com/edumentab/react-examples-storybook\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Github repo\n        </a>\n        .\n      </p>\n    </div>\n  ))\n","compiled":"import React from\"react\";import{storiesOf}from\"@storybook/react\";import{linkTo}from\"@storybook/addon-links\";import imageFile from\"./frontpage.jpg\";var image={src:imageFile,alt:\"my image\"},_ref=/*#__PURE__*/React.createElement(\"p\",null,\"Welcome to (some of) the training materials for\",\" \",React.createElement(\"a\",{href:\"http://edument.se\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Edument\"),\"'s course in\",\" \",React.createElement(\"a\",{href:\"https://edument.se/en/education/categories/web-development-courses/advanced-react\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Advanced React\"),\"!\"),_ref2=/*#__PURE__*/React.createElement(\"p\",null,\"There'll be more thorough instructions here eventually; for now, see the README file in the\",\" \",React.createElement(\"a\",{href:\"https://github.com/edumentab/react-examples-storybook\",target:\"_blank\",rel:\"noopener noreferrer\"},\"Github repo\"),\".\");storiesOf(\"home\",module).add(\"welcome!\",function(){return React.createElement(\"button\",{href:\"#\",style:{maxWidth:\"85%\",maxHeight:\"85%\",display:\"block\",textDecoration:\"none\",cursor:\"pointer\",border:\"none\"},onClick:linkTo(\"home\",\"instructions\")},React.createElement(\"img\",{style:{maxWidth:\"100%\"},src:image.src,alt:image.alt}))}).add(\"instructions\",function(){return React.createElement(\"div\",{style:{display:\"flex\",flexDirection:\"column\",height:\"100%\",alignItems:\"center\",justifyContent:\"center\",textAlign:\"center\"}},_ref,_ref2)});"},"examples/ChessPiece/ChessPiece.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\nimport { select } from '@storybook/addon-knobs'\n\nimport { ChessPiece } from '.'\n\nstoriesOf('examples/ChessPiece (transition, CSS modules)', module).add(\n  'select with knob',\n  () => {\n    return (\n      <ChessPiece\n        piece={select(\n          'Piece',\n          ['pawn', 'king', 'queen', 'rook', 'bishop', 'knight'],\n          'pawn'\n        )}\n        mode={select('Mode', ['normal', 'available', 'selected'], 'normal')}\n      />\n    )\n  },\n  {\n    notes: `A chess piece using [CSS modules](https://github.com/css-modules/css-modules) and [React Transition Group](https://github.com/reactjs/react-transition-group) (and also the [classnames](https://github.com/JedWatson/classnames#readme) helper) `,\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{select}from\"@storybook/addon-knobs\";import{ChessPiece}from\".\";storiesOf(\"examples/ChessPiece (transition, CSS modules)\",module).add(\"select with knob\",function(){return React.createElement(ChessPiece,{piece:select(\"Piece\",[\"pawn\",\"king\",\"queen\",\"rook\",\"bishop\",\"knight\"],\"pawn\"),mode:select(\"Mode\",[\"normal\",\"available\",\"selected\"],\"normal\")})},{notes:\"A chess piece using [CSS modules](https://github.com/css-modules/css-modules) and [React Transition Group](https://github.com/reactjs/react-transition-group) (and also the [classnames](https://github.com/JedWatson/classnames#readme) helper) \"});"},"examples/Hello/Hello.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\nimport { text } from '@storybook/addon-knobs'\n\nimport { Hello } from '.'\n\nstoriesOf('examples/Hello (basic rendering)', module).add(\n  'change input in the Knobs tab',\n  () => {\n    const name = text('Name', 'John Doe')\n    return <Hello name={name} />\n  },\n  {\n    notes: `A super-simple component that just takes a prop and renders it.`,\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{text}from\"@storybook/addon-knobs\";import{Hello}from\".\";storiesOf(\"examples/Hello (basic rendering)\",module).add(\"change input in the Knobs tab\",function(){var name=text(\"Name\",\"John Doe\");return React.createElement(Hello,{name:name})},{notes:\"A super-simple component that just takes a prop and renders it.\"});"},"examples/Hello/Hello.test.jsx":{"raw":"import React from 'react'\nimport { shallow } from 'enzyme'\n\nimport { Hello } from '.'\n\ndescribe('The Hello component', () => {\n  it('says hello to the name that was passed in', () => {\n    const wrapper = shallow(<Hello name=\"Göran\" />)\n    expect(wrapper.text()).toEqual('Hello Göran!')\n  })\n})\n","compiled":"import React from\"react\";import{shallow}from\"enzyme\";import{Hello}from\".\";var _ref=/*#__PURE__*/React.createElement(Hello,{name:\"G\\xF6ran\"});describe(\"The Hello component\",function(){it(\"says hello to the name that was passed in\",function(){var wrapper=shallow(_ref);expect(wrapper.text()).toEqual(\"Hello G\\xF6ran!\")})});"},"examples/Clicker/Clicker_class/Clicker.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\nimport { number } from '@storybook/addon-knobs'\n\nimport { Clicker } from '.'\n\nstoriesOf('examples/Clicker (state handling)/Clicker (class)', module).add(\n  'dynamic',\n  () => {\n    const start = number('Initial count', 0)\n    return <Clicker start={start} key={start} />\n  },\n  {\n    notes: `A basic stateful component using a [class component](https://reactjs.org/docs/state-and-lifecycle.html).`,\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{number}from\"@storybook/addon-knobs\";import{Clicker}from\".\";storiesOf(\"examples/Clicker (state handling)/Clicker (class)\",module).add(\"dynamic\",function(){var start=number(\"Initial count\",0);return React.createElement(Clicker,{start:start,key:start})},{notes:\"A basic stateful component using a [class component](https://reactjs.org/docs/state-and-lifecycle.html).\"});"},"examples/Clicker/Clicker_class/Clicker.test.jsx":{"raw":"import React from 'react'\nimport { shallow } from 'enzyme'\n\nimport { Clicker } from '.'\n\n// The tests are identical for all Clicker variants\n\ndescribe('The Clicker component (class variant)', () => {\n  it('starts at 0 by default', () => {\n    const wrapper = shallow(<Clicker />)\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('0')\n  })\n  it('can start at given start value', () => {\n    const wrapper = shallow(<Clicker start={7} />)\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('7')\n  })\n  it('can increase the value', () => {\n    const wrapper = shallow(<Clicker start={3} />)\n    wrapper.find('[data-qa=\"increase\"]').simulate('click')\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('4')\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";import React from\"react\";import{shallow}from\"enzyme\";import{Clicker}from\".\";// The tests are identical for all Clicker variants\nvar _ref=/*#__PURE__*/React.createElement(Clicker,null),_ref2=/*#__PURE__*/React.createElement(Clicker,{start:7}),_ref3=/*#__PURE__*/React.createElement(Clicker,{start:3});describe(\"The Clicker component (class variant)\",function(){it(\"starts at 0 by default\",function(){var wrapper=shallow(_ref);expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"0\")}),it(\"can start at given start value\",function(){var wrapper=shallow(_ref2);expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"7\")}),it(\"can increase the value\",function(){var wrapper=shallow(_ref3);wrapper.find(\"[data-qa=\\\"increase\\\"]\").simulate(\"click\"),expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"4\")})});"},"examples/Clicker/Clicker_hook_reducer/Clicker.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\nimport { number } from '@storybook/addon-knobs'\n\nimport { Clicker } from '.'\n\nstoriesOf(\n  'examples/Clicker (state handling)/Clicker (hook reducer)',\n  module\n).add(\n  'dynamic',\n  () => {\n    const start = number('Initial count', 0)\n    return <Clicker start={start} key={start} />\n  },\n  {\n    notes: `A basic stateful component using the [<code>useReducer</code> hook](https://reactjs.org/docs/hooks-reference.html#usereducer).`,\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{number}from\"@storybook/addon-knobs\";import{Clicker}from\".\";storiesOf(\"examples/Clicker (state handling)/Clicker (hook reducer)\",module).add(\"dynamic\",function(){var start=number(\"Initial count\",0);return React.createElement(Clicker,{start:start,key:start})},{notes:\"A basic stateful component using the [<code>useReducer</code> hook](https://reactjs.org/docs/hooks-reference.html#usereducer).\"});"},"examples/Clicker/Clicker_hook_reducer/Clicker.test.jsx":{"raw":"import React from 'react'\nimport { shallow } from 'enzyme'\nimport { Clicker } from '.'\n\n// The tests are identical for all Clicker variants\n\ndescribe('The Clicker component (hook reducer variant)', () => {\n  it('starts at 0 by default', () => {\n    const wrapper = shallow(<Clicker />)\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('0')\n  })\n  it('can start at given start value', () => {\n    const wrapper = shallow(<Clicker start={7} />)\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('7')\n  })\n  it('can increase the value', () => {\n    const wrapper = shallow(<Clicker start={3} />)\n    wrapper.find('[data-qa=\"increase\"]').simulate('click')\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('4')\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";import React from\"react\";import{shallow}from\"enzyme\";import{Clicker}from\".\";// The tests are identical for all Clicker variants\nvar _ref=/*#__PURE__*/React.createElement(Clicker,null),_ref2=/*#__PURE__*/React.createElement(Clicker,{start:7}),_ref3=/*#__PURE__*/React.createElement(Clicker,{start:3});describe(\"The Clicker component (hook reducer variant)\",function(){it(\"starts at 0 by default\",function(){var wrapper=shallow(_ref);expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"0\")}),it(\"can start at given start value\",function(){var wrapper=shallow(_ref2);expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"7\")}),it(\"can increase the value\",function(){var wrapper=shallow(_ref3);wrapper.find(\"[data-qa=\\\"increase\\\"]\").simulate(\"click\"),expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"4\")})});"},"examples/Clicker/Clicker_hook_state/Clicker.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\nimport { number } from '@storybook/addon-knobs'\n\nimport { Clicker } from '.'\n\nstoriesOf('examples/Clicker (state handling)/Clicker (hook state)', module).add(\n  'dynamic',\n  () => {\n    const start = number('Initial count', 0)\n    return <Clicker start={start} key={start} />\n  },\n  {\n    notes: `A basic stateful component using the [<code>useState</code> hook](https://reactjs.org/docs/hooks-state.html).`,\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{number}from\"@storybook/addon-knobs\";import{Clicker}from\".\";storiesOf(\"examples/Clicker (state handling)/Clicker (hook state)\",module).add(\"dynamic\",function(){var start=number(\"Initial count\",0);return React.createElement(Clicker,{start:start,key:start})},{notes:\"A basic stateful component using the [<code>useState</code> hook](https://reactjs.org/docs/hooks-state.html).\"});"},"examples/Clicker/Clicker_hook_state/Clicker.test.jsx":{"raw":"import React from 'react'\nimport { shallow } from 'enzyme'\nimport { Clicker } from '.'\n\n// The tests are identical for all Clicker variants\n\ndescribe('The Clicker component (hook state variant)', () => {\n  it('starts at 0 by default', () => {\n    const wrapper = shallow(<Clicker />)\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('0')\n  })\n  it('can start at given start value', () => {\n    const wrapper = shallow(<Clicker start={7} />)\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('7')\n  })\n  it('can increase the value', () => {\n    const wrapper = shallow(<Clicker start={3} />)\n    wrapper.find('[data-qa=\"increase\"]').simulate('click')\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('4')\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";import React from\"react\";import{shallow}from\"enzyme\";import{Clicker}from\".\";// The tests are identical for all Clicker variants\nvar _ref=/*#__PURE__*/React.createElement(Clicker,null),_ref2=/*#__PURE__*/React.createElement(Clicker,{start:7}),_ref3=/*#__PURE__*/React.createElement(Clicker,{start:3});describe(\"The Clicker component (hook state variant)\",function(){it(\"starts at 0 by default\",function(){var wrapper=shallow(_ref);expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"0\")}),it(\"can start at given start value\",function(){var wrapper=shallow(_ref2);expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"7\")}),it(\"can increase the value\",function(){var wrapper=shallow(_ref3);wrapper.find(\"[data-qa=\\\"increase\\\"]\").simulate(\"click\"),expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"4\")})});"},"examples/Clicker/Clicker_oldClass/Clicker.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\nimport { number } from '@storybook/addon-knobs'\n\nimport { Clicker } from '.'\n\nstoriesOf(\n  'examples/Clicker (state handling)/Clicker (old createClass)',\n  module\n).add(\n  'dynamic',\n  () => {\n    const start = number('Initial count', 0)\n    const ClickerFactory = React.createFactory(Clicker) // detour because old legacy component\n    return <ClickerFactory start={start} key={start} />\n  },\n  {\n    notes: `A basic stateful component using the deprecated [<code>createReactClass</code>](https://reactjs.org/docs/react-without-es6.html).`,\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{number}from\"@storybook/addon-knobs\";import{Clicker}from\".\";storiesOf(\"examples/Clicker (state handling)/Clicker (old createClass)\",module).add(\"dynamic\",function(){var start=number(\"Initial count\",0),ClickerFactory=React.createFactory(Clicker);// detour because old legacy component\nreturn React.createElement(ClickerFactory,{start:start,key:start})},{notes:\"A basic stateful component using the deprecated [<code>createReactClass</code>](https://reactjs.org/docs/react-without-es6.html).\"});"},"examples/Clicker/Clicker_oldClass/Clicker.test.jsx":{"raw":"import React from 'react'\nimport { shallow } from 'enzyme'\nimport { Clicker } from '.'\n\n// The tests are identical for all Clicker variants\n\ndescribe('The Clicker component (old createClass variant)', () => {\n  it('starts at 0 by default', () => {\n    const wrapper = shallow(<Clicker />)\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('0')\n  })\n  it('can start at given start value', () => {\n    const wrapper = shallow(<Clicker start={7} />)\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('7')\n  })\n  it('can increase the value', () => {\n    const wrapper = shallow(<Clicker start={3} />)\n    wrapper.find('[data-qa=\"increase\"]').simulate('click')\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('4')\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";import React from\"react\";import{shallow}from\"enzyme\";import{Clicker}from\".\";// The tests are identical for all Clicker variants\nvar _ref=/*#__PURE__*/React.createElement(Clicker,null),_ref2=/*#__PURE__*/React.createElement(Clicker,{start:7}),_ref3=/*#__PURE__*/React.createElement(Clicker,{start:3});describe(\"The Clicker component (old createClass variant)\",function(){it(\"starts at 0 by default\",function(){var wrapper=shallow(_ref);expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"0\")}),it(\"can start at given start value\",function(){var wrapper=shallow(_ref2);expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"7\")}),it(\"can increase the value\",function(){var wrapper=shallow(_ref3);wrapper.find(\"[data-qa=\\\"increase\\\"]\").simulate(\"click\"),expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"4\")})});"},"examples/Clicker/Clicker_recompose/Clicker.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\nimport { number } from '@storybook/addon-knobs'\n\nimport { Clicker } from '.'\n\nstoriesOf('examples/Clicker (state handling)/Clicker (recompose)', module).add(\n  'dynamic',\n  () => {\n    const start = number('Initial count', 0)\n    return <Clicker start={start} key={start} />\n  },\n  {\n    notes: `A basic stateful component using the [<code>Recompose</code> library](https://github.com/acdlite/recompose), which can be seen as a precursor to the new [hooks API](https://reactjs.org/docs/hooks-intro.html).`,\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{number}from\"@storybook/addon-knobs\";import{Clicker}from\".\";storiesOf(\"examples/Clicker (state handling)/Clicker (recompose)\",module).add(\"dynamic\",function(){var start=number(\"Initial count\",0);return React.createElement(Clicker,{start:start,key:start})},{notes:\"A basic stateful component using the [<code>Recompose</code> library](https://github.com/acdlite/recompose), which can be seen as a precursor to the new [hooks API](https://reactjs.org/docs/hooks-intro.html).\"});"},"examples/Clicker/Clicker_recompose/Clicker.test.jsx":{"raw":"/**\n * @jest-environment jsdom\n */\n\nimport React from 'react'\nimport { mount } from 'enzyme'\n\nimport { Clicker } from '.'\n\n// The tests are identical for all Clicker variants\n// (except this one uses mount since Clicker renders an inner component now)\n\ndescribe('The Clicker component (recompose variant)', () => {\n  it('starts at 0 by default', () => {\n    const wrapper = mount(<Clicker />)\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('0')\n  })\n  it('can start at given start value', () => {\n    const wrapper = mount(<Clicker start={7} />)\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('7')\n  })\n  it('can increase the value', () => {\n    const wrapper = mount(<Clicker start={3} />)\n    wrapper.find('[data-qa=\"increase\"]').simulate('click')\n    expect(wrapper.find('[data-qa=\"count\"]')).toHaveText('4')\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";/**\n * @jest-environment jsdom\n */import React from\"react\";import{mount}from\"enzyme\";import{Clicker}from\".\";// The tests are identical for all Clicker variants\n// (except this one uses mount since Clicker renders an inner component now)\nvar _ref=/*#__PURE__*/React.createElement(Clicker,null),_ref2=/*#__PURE__*/React.createElement(Clicker,{start:7}),_ref3=/*#__PURE__*/React.createElement(Clicker,{start:3});describe(\"The Clicker component (recompose variant)\",function(){it(\"starts at 0 by default\",function(){var wrapper=mount(_ref);expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"0\")}),it(\"can start at given start value\",function(){var wrapper=mount(_ref2);expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"7\")}),it(\"can increase the value\",function(){var wrapper=mount(_ref3);wrapper.find(\"[data-qa=\\\"increase\\\"]\").simulate(\"click\"),expect(wrapper.find(\"[data-qa=\\\"count\\\"]\")).toHaveText(\"4\")})});"},"examples/Form/Form_controlled_class/Form.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { Form } from '.'\n\nstoriesOf(\n  'examples/Form (controlled vs uncontrolled)/Form (controlled, class)',\n  module\n).add(\n  'output in console',\n  () => {\n    return <Form onSubmit={name => console.log('Submitted', name)} />\n  },\n  {\n    notes: `A form using the [controlled pattern](https://reactjs.org/docs/forms.html#controlled-components)`,\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{Form}from\".\";storiesOf(\"examples/Form (controlled vs uncontrolled)/Form (controlled, class)\",module).add(\"output in console\",function(){return React.createElement(Form,{onSubmit:function onSubmit(name){return console.log(\"Submitted\",name)}})},{notes:\"A form using the [controlled pattern](https://reactjs.org/docs/forms.html#controlled-components)\"});"},"examples/Form/Form_controlled_class/Form.test.jsx":{"raw":"import React from 'react'\nimport { shallow } from 'enzyme'\n\nimport { Form } from '.'\n\ndescribe('the Form example component (controlled, class)', () => {\n  let wrapper, input, button, callback\n  beforeEach(() => {\n    callback = jest.fn()\n    wrapper = shallow(<Form onSubmit={callback} />)\n    input = wrapper.find('[data-qa=\"name-field\"]')\n    button = wrapper.find('[data-qa=\"submit-btn\"]')\n  })\n  test('submits the current field content when button is clicked', () => {\n    input.simulate('change', { target: { value: 'SuperMax' } })\n    button.simulate('click')\n    expect(callback).toHaveBeenCalledWith('SuperMax')\n  })\n  test('can also submit via Enter key', () => {\n    input.simulate('change', { target: { value: 'Dork' } })\n    input.simulate('keyPress', { key: 'Enter' })\n    expect(callback).toHaveBeenCalledWith('Dork')\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";import React from\"react\";import{shallow}from\"enzyme\";import{Form}from\".\";describe(\"the Form example component (controlled, class)\",function(){var wrapper,input,button,callback,_ref=/*#__PURE__*/React.createElement(Form,{onSubmit:callback});beforeEach(function(){callback=jest.fn(),wrapper=shallow(_ref),input=wrapper.find(\"[data-qa=\\\"name-field\\\"]\"),button=wrapper.find(\"[data-qa=\\\"submit-btn\\\"]\")}),test(\"submits the current field content when button is clicked\",function(){input.simulate(\"change\",{target:{value:\"SuperMax\"}}),button.simulate(\"click\"),expect(callback).toHaveBeenCalledWith(\"SuperMax\")}),test(\"can also submit via Enter key\",function(){input.simulate(\"change\",{target:{value:\"Dork\"}}),input.simulate(\"keyPress\",{key:\"Enter\"}),expect(callback).toHaveBeenCalledWith(\"Dork\")})});"},"examples/Form/Form_controlled_hook/Form.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { Form } from '.'\n\nstoriesOf(\n  'examples/Form (controlled vs uncontrolled)/Form (controlled, hook)',\n  module\n).add(\n  'output in console',\n  () => {\n    return <Form onSubmit={name => console.log('Submitted', name)} />\n  },\n  {\n    notes: `A form using the [controlled pattern](https://reactjs.org/docs/forms.html#controlled-components)`,\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{Form}from\".\";storiesOf(\"examples/Form (controlled vs uncontrolled)/Form (controlled, hook)\",module).add(\"output in console\",function(){return React.createElement(Form,{onSubmit:function onSubmit(name){return console.log(\"Submitted\",name)}})},{notes:\"A form using the [controlled pattern](https://reactjs.org/docs/forms.html#controlled-components)\"});"},"examples/Form/Form_controlled_hook/Form.test.jsx":{"raw":"/**\n * @jest-environment jsdom\n */\n\nimport React from 'react'\nimport { mount } from 'enzyme'\n\nimport { Form } from '.'\n\ndescribe('the Form example component (controlled, hook)', () => {\n  let wrapper, input, button, callback\n  beforeEach(() => {\n    callback = jest.fn()\n    wrapper = mount(<Form onSubmit={callback} />)\n    input = wrapper.find('[data-qa=\"name-field\"]')\n    button = wrapper.find('[data-qa=\"submit-btn\"]')\n  })\n  test('submits the current field content when button is clicked', () => {\n    input.simulate('change', { target: { value: 'SuperMax' } })\n    button.simulate('click')\n    expect(callback).toHaveBeenCalledWith('SuperMax')\n  })\n  test('can also submit via Enter key', () => {\n    input.simulate('change', { target: { value: 'Dork' } })\n    input.simulate('keyPress', { key: 'Enter' })\n    expect(callback).toHaveBeenCalledWith('Dork')\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";/**\n * @jest-environment jsdom\n */import React from\"react\";import{mount}from\"enzyme\";import{Form}from\".\";describe(\"the Form example component (controlled, hook)\",function(){var wrapper,input,button,callback,_ref=/*#__PURE__*/React.createElement(Form,{onSubmit:callback});beforeEach(function(){callback=jest.fn(),wrapper=mount(_ref),input=wrapper.find(\"[data-qa=\\\"name-field\\\"]\"),button=wrapper.find(\"[data-qa=\\\"submit-btn\\\"]\")}),test(\"submits the current field content when button is clicked\",function(){input.simulate(\"change\",{target:{value:\"SuperMax\"}}),button.simulate(\"click\"),expect(callback).toHaveBeenCalledWith(\"SuperMax\")}),test(\"can also submit via Enter key\",function(){input.simulate(\"change\",{target:{value:\"Dork\"}}),input.simulate(\"keyPress\",{key:\"Enter\"}),expect(callback).toHaveBeenCalledWith(\"Dork\")})});"},"examples/Form/Form_uncontrolled_class/Form.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { Form } from '.'\n\nstoriesOf(\n  'examples/Form (controlled vs uncontrolled)/Form (uncontrolled, class)',\n  module\n).add(\n  'output in console',\n  () => {\n    return <Form onSubmit={name => console.log('Submitted', name)} />\n  },\n  {\n    notes: `A form using the [uncontrolled pattern](https://reactjs.org/docs/uncontrolled-components.html)`,\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{Form}from\".\";storiesOf(\"examples/Form (controlled vs uncontrolled)/Form (uncontrolled, class)\",module).add(\"output in console\",function(){return React.createElement(Form,{onSubmit:function onSubmit(name){return console.log(\"Submitted\",name)}})},{notes:\"A form using the [uncontrolled pattern](https://reactjs.org/docs/uncontrolled-components.html)\"});"},"examples/Form/Form_uncontrolled_class/Form.test.jsx":{"raw":"/**\n * @jest-environment jsdom\n */\n\nimport React from 'react'\nimport { mount } from 'enzyme'\n\nimport { Form } from '.'\n\ndescribe('the Form example component (uncontrolled, class)', () => {\n  let wrapper, input, button, callback\n  beforeEach(() => {\n    callback = jest.fn()\n    wrapper = mount(<Form onSubmit={callback} />)\n    input = wrapper.find('[data-qa=\"name-field\"]')\n    button = wrapper.find('[data-qa=\"submit-btn\"]')\n  })\n  test('submits the current field content when button is clicked', () => {\n    input.getDOMNode().value = 'SuperMax'\n    button.simulate('click')\n    expect(callback).toHaveBeenCalledWith('SuperMax')\n  })\n  test('can also submit via Enter key', () => {\n    input.getDOMNode().value = 'Dork'\n    input.simulate('keyPress', { key: 'Enter' })\n    expect(callback).toHaveBeenCalledWith('Dork')\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";/**\n * @jest-environment jsdom\n */import React from\"react\";import{mount}from\"enzyme\";import{Form}from\".\";describe(\"the Form example component (uncontrolled, class)\",function(){var wrapper,input,button,callback,_ref=/*#__PURE__*/React.createElement(Form,{onSubmit:callback});beforeEach(function(){callback=jest.fn(),wrapper=mount(_ref),input=wrapper.find(\"[data-qa=\\\"name-field\\\"]\"),button=wrapper.find(\"[data-qa=\\\"submit-btn\\\"]\")}),test(\"submits the current field content when button is clicked\",function(){input.getDOMNode().value=\"SuperMax\",button.simulate(\"click\"),expect(callback).toHaveBeenCalledWith(\"SuperMax\")}),test(\"can also submit via Enter key\",function(){input.getDOMNode().value=\"Dork\",input.simulate(\"keyPress\",{key:\"Enter\"}),expect(callback).toHaveBeenCalledWith(\"Dork\")})});"},"examples/Form/Form_uncontrolled_hook/Form.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { Form } from '.'\n\nstoriesOf(\n  'examples/Form (controlled vs uncontrolled)/Form (uncontrolled, hook)',\n  module\n).add(\n  'output in console',\n  () => {\n    return <Form onSubmit={name => console.log('Submitted', name)} />\n  },\n  {\n    notes: `A form using the [uncontrolled pattern](https://reactjs.org/docs/uncontrolled-components.html)`,\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{Form}from\".\";storiesOf(\"examples/Form (controlled vs uncontrolled)/Form (uncontrolled, hook)\",module).add(\"output in console\",function(){return React.createElement(Form,{onSubmit:function onSubmit(name){return console.log(\"Submitted\",name)}})},{notes:\"A form using the [uncontrolled pattern](https://reactjs.org/docs/uncontrolled-components.html)\"});"},"examples/Form/Form_uncontrolled_hook/Form.test.jsx":{"raw":"/**\n * @jest-environment jsdom\n */\n\nimport React from 'react'\nimport { mount } from 'enzyme'\n\nimport { Form } from '.'\n\ndescribe('the Form example component (uncontrolled, hook)', () => {\n  let wrapper, input, button, callback\n  beforeEach(() => {\n    callback = jest.fn()\n    wrapper = mount(<Form onSubmit={callback} />)\n    input = wrapper.find('[data-qa=\"name-field\"]')\n    button = wrapper.find('[data-qa=\"submit-btn\"]')\n  })\n  test('submits the current field content when button is clicked', () => {\n    input.getDOMNode().value = 'SuperMax'\n    button.simulate('click')\n    expect(callback).toHaveBeenCalledWith('SuperMax')\n  })\n  test('can also submit via Enter key', () => {\n    input.getDOMNode().value = 'Dork'\n    input.simulate('keyPress', { key: 'Enter' })\n    expect(callback).toHaveBeenCalledWith('Dork')\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";/**\n * @jest-environment jsdom\n */import React from\"react\";import{mount}from\"enzyme\";import{Form}from\".\";describe(\"the Form example component (uncontrolled, hook)\",function(){var wrapper,input,button,callback,_ref=/*#__PURE__*/React.createElement(Form,{onSubmit:callback});beforeEach(function(){callback=jest.fn(),wrapper=mount(_ref),input=wrapper.find(\"[data-qa=\\\"name-field\\\"]\"),button=wrapper.find(\"[data-qa=\\\"submit-btn\\\"]\")}),test(\"submits the current field content when button is clicked\",function(){input.getDOMNode().value=\"SuperMax\",button.simulate(\"click\"),expect(callback).toHaveBeenCalledWith(\"SuperMax\")}),test(\"can also submit via Enter key\",function(){input.getDOMNode().value=\"Dork\",input.simulate(\"keyPress\",{key:\"Enter\"}),expect(callback).toHaveBeenCalledWith(\"Dork\")})});"},"examples/Swedify/Swedify_callbackRef/Swedify.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { Swedify } from './Swedify'\n\nstoriesOf('examples/Swedify (DOM manip)/Swedify (callback ref)', module).add(\n  'dynamic',\n  () => <Swedify>Swedified via callback ref!</Swedify>,\n  {\n    notes: {\n      markdown: `DOM manipulation via [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs).`,\n    },\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{Swedify}from\"./Swedify\";var _ref=/*#__PURE__*/React.createElement(Swedify,null,\"Swedified via callback ref!\");storiesOf(\"examples/Swedify (DOM manip)/Swedify (callback ref)\",module).add(\"dynamic\",function(){return _ref},{notes:{markdown:\"DOM manipulation via [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs).\"}});"},"examples/Swedify/Swedify_createRef/Swedify.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { Swedify } from './Swedify'\n\nstoriesOf(\n  'examples/Swedify (DOM manip)/Swedify (createRef, class)',\n  module\n).add('dynamic', () => <Swedify>Swedified via class and createRef!</Swedify>, {\n  notes: {\n    markdown: `DOM manipulation via [createRef](https://reactjs.org/docs/refs-and-the-dom.html).`,\n  },\n})\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{Swedify}from\"./Swedify\";var _ref=/*#__PURE__*/React.createElement(Swedify,null,\"Swedified via class and createRef!\");storiesOf(\"examples/Swedify (DOM manip)/Swedify (createRef, class)\",module).add(\"dynamic\",function(){return _ref},{notes:{markdown:\"DOM manipulation via [createRef](https://reactjs.org/docs/refs-and-the-dom.html).\"}});"},"examples/Swedify/Swedify_stringRef/Swedify.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { Swedify } from './Swedify'\n\nstoriesOf(\n  'examples/Swedify (DOM manip)/Swedify (createRef, class)',\n  module\n).add(\n  'dynamic',\n  () => <Swedify>Swedified via string ref (deprecated)</Swedify>,\n  {\n    notes: {\n      markdown: `DOM manipulation via [createRef](https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs).`,\n    },\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{Swedify}from\"./Swedify\";var _ref=/*#__PURE__*/React.createElement(Swedify,null,\"Swedified via string ref (deprecated)\");storiesOf(\"examples/Swedify (DOM manip)/Swedify (createRef, class)\",module).add(\"dynamic\",function(){return _ref},{notes:{markdown:\"DOM manipulation via [createRef](https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs).\"}});"},"examples/Swedify/Swedify_useRef/Swedify.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { Swedify } from './Swedify'\n\nstoriesOf('examples/Swedify (DOM manip)/Swedify (useRef)', module).add(\n  'dynamic',\n  () => <Swedify>Swedified via useRef!</Swedify>,\n  {\n    notes: {\n      markdown: `DOM manipulation via [useRef hook](https://reactjs.org/docs/hooks-reference.html#useref).`,\n    },\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{Swedify}from\"./Swedify\";var _ref=/*#__PURE__*/React.createElement(Swedify,null,\"Swedified via useRef!\");storiesOf(\"examples/Swedify (DOM manip)/Swedify (useRef)\",module).add(\"dynamic\",function(){return _ref},{notes:{markdown:\"DOM manipulation via [useRef hook](https://reactjs.org/docs/hooks-reference.html#useref).\"}});"},"examples/User/User/User.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\nimport { text, boolean } from '@storybook/addon-knobs'\n\nimport { User } from '.'\nimport { UserContext } from './_UserContext'\n\nstoriesOf('examples/User (data from context)/User (context)', module).add(\n  'dynamic',\n  () => {\n    const userData = {\n      name: text('Name', 'Johan Hegg'),\n      loggedIn: boolean('Logged in', true),\n    }\n    return (\n      <UserContext.Provider value={userData}>\n        <div>\n          <div>\n            <div>\n              <User />\n            </div>\n          </div>\n        </div>\n      </UserContext.Provider>\n    )\n  },\n  {\n    notes: {\n      markdown: `A component fetching data from the [React context API](https://reactjs.org/docs/context.html).`,\n    },\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{text,boolean as _boolean}from\"@storybook/addon-knobs\";import{User}from\".\";import{UserContext}from\"./_UserContext\";var _ref=/*#__PURE__*/React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(User,null))));storiesOf(\"examples/User (data from context)/User (context)\",module).add(\"dynamic\",function(){var userData={name:text(\"Name\",\"Johan Hegg\"),loggedIn:_boolean(\"Logged in\",!0)};return React.createElement(UserContext.Provider,{value:userData},_ref)},{notes:{markdown:\"A component fetching data from the [React context API](https://reactjs.org/docs/context.html).\"}});"},"examples/User/User/User.test.jsx":{"raw":"/**\n * @jest-environment jsdom\n */\n\nimport React from 'react'\nimport { mount } from 'enzyme'\n\nimport { User } from '.'\nimport { UserContext } from './_UserContext'\n\ndescribe('The User component (new context version)', () => {\n  it('should render name fetched from user context', () => {\n    const name = 'Johan Hegg'\n    const userData = { name, loggedIn: true }\n    const wrapper = mount(\n      <UserContext.Provider value={userData}>\n        <div>\n          <div>\n            <div>\n              <User />\n            </div>\n          </div>\n        </div>\n      </UserContext.Provider>\n    )\n    expect(wrapper).toIncludeText(name)\n  })\n})\n","compiled":"/**\n * @jest-environment jsdom\n */import React from\"react\";import{mount}from\"enzyme\";import{User}from\".\";import{UserContext}from\"./_UserContext\";var _ref=/*#__PURE__*/React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(User,null))));describe(\"The User component (new context version)\",function(){it(\"should render name fetched from user context\",function(){var wrapper=mount(React.createElement(UserContext.Provider,{value:{name:\"Johan Hegg\",loggedIn:!0}},_ref));expect(wrapper).toIncludeText(\"Johan Hegg\")})});"},"examples/User/User_hook/User.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\nimport { text, boolean } from '@storybook/addon-knobs'\n\nimport { User } from '.'\nimport { UserContext } from './_UserContext'\n\nstoriesOf('examples/User (data from context)/User (hook)', module).add(\n  'dynamic',\n  () => {\n    const userData = {\n      name: text('Name', 'Johan Hegg'),\n      loggedIn: boolean('Logged in', true),\n    }\n    return (\n      <UserContext.Provider value={userData}>\n        <div>\n          <div>\n            <div>\n              <User />\n            </div>\n          </div>\n        </div>\n      </UserContext.Provider>\n    )\n  },\n  {\n    notes: {\n      markdown: `A version of <code>User</code> that accesses data from [React context API](https://reactjs.org/docs/context.html) through the [<code>useContext</code> hook](https://reactjs.org/docs/hooks-reference.html#usecontext).`,\n    },\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{text,boolean as _boolean}from\"@storybook/addon-knobs\";import{User}from\".\";import{UserContext}from\"./_UserContext\";var _ref=/*#__PURE__*/React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(User,null))));storiesOf(\"examples/User (data from context)/User (hook)\",module).add(\"dynamic\",function(){var userData={name:text(\"Name\",\"Johan Hegg\"),loggedIn:_boolean(\"Logged in\",!0)};return React.createElement(UserContext.Provider,{value:userData},_ref)},{notes:{markdown:\"A version of <code>User</code> that accesses data from [React context API](https://reactjs.org/docs/context.html) through the [<code>useContext</code> hook](https://reactjs.org/docs/hooks-reference.html#usecontext).\"}});"},"examples/User/User_hook/User.test.jsx":{"raw":"/**\n * @jest-environment jsdom\n */\n\nimport React from 'react'\nimport { mount } from 'enzyme'\n\nimport { User } from '.'\nimport { UserContext } from './_UserContext'\n\ndescribe('The User component (hook version)', () => {\n  it('should render name fetched from user context', () => {\n    const name = 'Johan Hegg'\n    const userData = { name, loggedIn: true }\n    const wrapper = mount(\n      <UserContext.Provider value={userData}>\n        <div>\n          <div>\n            <div>\n              <User />\n            </div>\n          </div>\n        </div>\n      </UserContext.Provider>\n    )\n    expect(wrapper).toIncludeText(name)\n  })\n})\n","compiled":"/**\n * @jest-environment jsdom\n */import React from\"react\";import{mount}from\"enzyme\";import{User}from\".\";import{UserContext}from\"./_UserContext\";var _ref=/*#__PURE__*/React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(User,null))));describe(\"The User component (hook version)\",function(){it(\"should render name fetched from user context\",function(){var wrapper=mount(React.createElement(UserContext.Provider,{value:{name:\"Johan Hegg\",loggedIn:!0}},_ref));expect(wrapper).toIncludeText(\"Johan Hegg\")})});"},"examples/User/User_old/User.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\nimport { text, boolean } from '@storybook/addon-knobs'\n\nimport { User } from '.'\nimport { UserContext } from './_UserContext'\n\nstoriesOf('examples/User (data from context)/User (old context)', module).add(\n  'dynamic',\n  () => {\n    const userData = {\n      name: text('Name', 'Johan Hegg'),\n      loggedIn: boolean('Logged in', true),\n    }\n    return (\n      <UserContext key={JSON.stringify(userData)} user={userData}>\n        <div>\n          <div>\n            <div>\n              <User />\n            </div>\n          </div>\n        </div>\n      </UserContext>\n    )\n  },\n  {\n    notes: {\n      markdown: `\nA version of <code>User</code> that reads data from the [old deprecated context API](https://reactjs.org/docs/legacy-context.html).\n`,\n    },\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{text,boolean as _boolean}from\"@storybook/addon-knobs\";import{User}from\".\";import{UserContext}from\"./_UserContext\";var _ref=/*#__PURE__*/React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(User,null))));storiesOf(\"examples/User (data from context)/User (old context)\",module).add(\"dynamic\",function(){var userData={name:text(\"Name\",\"Johan Hegg\"),loggedIn:_boolean(\"Logged in\",!0)};return React.createElement(UserContext,{key:JSON.stringify(userData),user:userData},_ref)},{notes:{markdown:\"\\nA version of <code>User</code> that reads data from the [old deprecated context API](https://reactjs.org/docs/legacy-context.html).\\n\"}});"},"examples/User/User_old/User.test.jsx":{"raw":"import React from 'react'\nimport { shallow } from 'enzyme'\n\nimport { User } from '.'\n\ndescribe('The User component (old context version)', () => {\n  it('should render name fetched from user context', () => {\n    const name = 'Johan Hegg'\n    const userData = { name, loggedIn: true }\n    const wrapper = shallow(<User />, { context: { user: userData } })\n    expect(wrapper).toIncludeText(name)\n  })\n})\n","compiled":"import React from\"react\";import{shallow}from\"enzyme\";import{User}from\".\";var _ref=/*#__PURE__*/React.createElement(User,null);describe(\"The User component (old context version)\",function(){it(\"should render name fetched from user context\",function(){var wrapper=shallow(_ref,{context:{user:{name:\"Johan Hegg\",loggedIn:!0}}});expect(wrapper).toIncludeText(\"Johan Hegg\")})});"},"apps/Hangman/app_class/Hangman.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { Hangman } from '.'\n\nstoriesOf('apps/Hangman (class version)', module).add(\n  'play the game!',\n  () => {\n    return <Hangman />\n  },\n  {\n    notes: {\n      markdown: `\nThis is the full Hangman game! Note how there are also stories for the individual UI components,\ndeveloped one at at time before being put together in this main <code>Hangman</code> app component.\n\nAlso note how none of almost none of the game logic resides in the components; they are instead\nfound in separate functions (a \"logic layer\") for portability and testability.\n`,\n    },\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{Hangman}from\".\";var _ref=/*#__PURE__*/React.createElement(Hangman,null);storiesOf(\"apps/Hangman (class version)\",module).add(\"play the game!\",function(){return _ref},{notes:{markdown:\"\\nThis is the full Hangman game! Note how there are also stories for the individual UI components,\\ndeveloped one at at time before being put together in this main <code>Hangman</code> app component.\\n\\nAlso note how none of almost none of the game logic resides in the components; they are instead\\nfound in separate functions (a \\\"logic layer\\\") for portability and testability.\\n\"}});"},"apps/Hangman/app_class/Hangman.test.jsx":{"raw":"import React from 'react'\nimport { shallow } from 'enzyme'\n\njest.mock('../logic/getNewGame', () => ({ getNewGame: jest.fn() }))\njest.mock('../logic/performGuess', () => ({ performGuess: jest.fn() }))\nimport { getNewGame, performGuess } from '../logic'\n\nimport { Hangman } from '.'\nimport { UI, EnterField } from '../components'\n\ndescribe('the Hangman game (class version)', () => {\n  let wrapper\n  describe('initially', () => {\n    beforeEach(() => (wrapper = shallow(<Hangman />)))\n    test('renders an EnterField', () => {\n      expect(wrapper.find(EnterField)).toExist()\n    })\n    test('does not render a UI', () => {\n      expect(wrapper.find(UI)).not.toExist()\n    })\n\n    describe('when starting a game', () => {\n      const answer = 'indigo'\n      const startState = { fake: 'state' }\n      beforeEach(() => {\n        getNewGame.mockReturnValue(startState)\n        wrapper = shallow(<Hangman answer={answer} />)\n        const submitter = wrapper.find(EnterField).prop('onSubmit')\n        submitter(answer)\n      })\n      test('renders a UI', () => {\n        expect(wrapper.find(UI)).toExist()\n      })\n      test('passed in a new game state to UI', () => {\n        expect(wrapper.find(UI)).toHaveProp('state', startState)\n      })\n      test('created the new state from the give answer', () => {\n        expect(getNewGame).toHaveBeenCalledWith({ answer })\n      })\n      describe('when making a guess', () => {\n        const guess = 'x'\n        const updatedState = { updated: 'fake state' }\n        beforeEach(() => {\n          performGuess.mockReturnValue(updatedState)\n          wrapper = shallow(<Hangman />)\n          const submitter = wrapper.find(EnterField).prop('onSubmit')\n          submitter('secret')\n          const makeGuess = wrapper.find(UI).prop('makeGuess')\n          makeGuess(guess)\n        })\n        test('we pass updated state from logic layer to UI', () => {\n          expect(wrapper.find(UI)).toHaveProp('state', updatedState)\n        })\n        test('the performGuess logic was called correctly', () => {\n          expect(performGuess).toHaveBeenCalledWith(guess, startState)\n        })\n      })\n    })\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";import React from\"react\";import{shallow}from\"enzyme\";jest.mock(\"../logic/getNewGame\",function(){return{getNewGame:jest.fn()}}),jest.mock(\"../logic/performGuess\",function(){return{performGuess:jest.fn()}});import{getNewGame,performGuess}from\"../logic\";import{Hangman}from\".\";import{UI,EnterField}from\"../components\";var _ref=/*#__PURE__*/React.createElement(Hangman,null),_ref3=/*#__PURE__*/React.createElement(Hangman,null);describe(\"the Hangman game (class version)\",function(){var wrapper;describe(\"initially\",function(){beforeEach(function(){return wrapper=shallow(_ref)}),test(\"renders an EnterField\",function(){expect(wrapper.find(EnterField)).toExist()}),test(\"does not render a UI\",function(){expect(wrapper.find(UI)).not.toExist()}),describe(\"when starting a game\",function(){var startState={fake:\"state\"},_ref2=/*#__PURE__*/React.createElement(Hangman,{answer:\"indigo\"});beforeEach(function(){getNewGame.mockReturnValue(startState),wrapper=shallow(_ref2);var submitter=wrapper.find(EnterField).prop(\"onSubmit\");submitter(\"indigo\")}),test(\"renders a UI\",function(){expect(wrapper.find(UI)).toExist()}),test(\"passed in a new game state to UI\",function(){expect(wrapper.find(UI)).toHaveProp(\"state\",startState)}),test(\"created the new state from the give answer\",function(){expect(getNewGame).toHaveBeenCalledWith({answer:\"indigo\"})}),describe(\"when making a guess\",function(){var updatedState={updated:\"fake state\"};beforeEach(function(){performGuess.mockReturnValue(updatedState),wrapper=shallow(_ref3);var submitter=wrapper.find(EnterField).prop(\"onSubmit\");submitter(\"secret\");var makeGuess=wrapper.find(UI).prop(\"makeGuess\");makeGuess(\"x\")}),test(\"we pass updated state from logic layer to UI\",function(){expect(wrapper.find(UI)).toHaveProp(\"state\",updatedState)}),test(\"the performGuess logic was called correctly\",function(){expect(performGuess).toHaveBeenCalledWith(\"x\",startState)})})})})});"},"apps/Hangman/app_hook/Hangman.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { Hangman } from '.'\n\nstoriesOf('apps/Hangman (hook version)', module).add(\n  'play the game!',\n  () => {\n    return <Hangman />\n  },\n  {\n    notes: {\n      markdown: `\nThis is the full Hangman game! Note how there are also stories for the individual UI components,\ndeveloped one at at time before being put together in this main <code>Hangman</code> app component.\n\nAlso note how none of almost none of the game logic resides in the components; they are instead\nfound in separate functions (a \"logic layer\") for portability and testability.\n`,\n    },\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{Hangman}from\".\";var _ref=/*#__PURE__*/React.createElement(Hangman,null);storiesOf(\"apps/Hangman (hook version)\",module).add(\"play the game!\",function(){return _ref},{notes:{markdown:\"\\nThis is the full Hangman game! Note how there are also stories for the individual UI components,\\ndeveloped one at at time before being put together in this main <code>Hangman</code> app component.\\n\\nAlso note how none of almost none of the game logic resides in the components; they are instead\\nfound in separate functions (a \\\"logic layer\\\") for portability and testability.\\n\"}});"},"apps/Hangman/app_hook/Hangman.test.jsx":{"raw":"import React from 'react'\nimport { shallow } from 'enzyme'\n\njest.mock('../logic/getNewGame', () => ({ getNewGame: jest.fn() }))\njest.mock('../logic/performGuess', () => ({ performGuess: jest.fn() }))\nimport { getNewGame, performGuess } from '../logic'\n\nimport { Hangman } from '.'\nimport { UI, EnterField } from '../components'\n\ndescribe('the Hangman game (hook version)', () => {\n  let wrapper\n  describe('initially', () => {\n    beforeEach(() => (wrapper = shallow(<Hangman />)))\n    test('renders an EnterField', () => {\n      expect(wrapper.find(EnterField)).toExist()\n    })\n    test('does not render a UI', () => {\n      expect(wrapper.find(UI)).not.toExist()\n    })\n\n    describe('when starting a game', () => {\n      const answer = 'indigo'\n      const startState = { fake: 'state' }\n      beforeEach(() => {\n        getNewGame.mockReturnValue(startState)\n        wrapper = shallow(<Hangman answer={answer} />)\n        const submitter = wrapper.find(EnterField).prop('onSubmit')\n        submitter(answer)\n      })\n      test('renders a UI', () => {\n        expect(wrapper.find(UI)).toExist()\n      })\n      test('passed in a new game state to UI', () => {\n        expect(wrapper.find(UI)).toHaveProp('state', startState)\n      })\n      test('created the new state from the give answer', () => {\n        expect(getNewGame).toHaveBeenCalledWith({ answer })\n      })\n      describe('when making a guess', () => {\n        const guess = 'x'\n        const updatedState = { updated: 'fake state' }\n        beforeEach(() => {\n          performGuess.mockReturnValue(updatedState)\n          wrapper = shallow(<Hangman />)\n          const submitter = wrapper.find(EnterField).prop('onSubmit')\n          submitter('secret')\n          const makeGuess = wrapper.find(UI).prop('makeGuess')\n          makeGuess(guess)\n        })\n        test('we pass updated state from logic layer to UI', () => {\n          expect(wrapper.find(UI)).toHaveProp('state', updatedState)\n        })\n        test('the performGuess logic was called correctly', () => {\n          expect(performGuess).toHaveBeenCalledWith(guess, startState)\n        })\n      })\n    })\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";import React from\"react\";import{shallow}from\"enzyme\";jest.mock(\"../logic/getNewGame\",function(){return{getNewGame:jest.fn()}}),jest.mock(\"../logic/performGuess\",function(){return{performGuess:jest.fn()}});import{getNewGame,performGuess}from\"../logic\";import{Hangman}from\".\";import{UI,EnterField}from\"../components\";var _ref=/*#__PURE__*/React.createElement(Hangman,null),_ref3=/*#__PURE__*/React.createElement(Hangman,null);describe(\"the Hangman game (hook version)\",function(){var wrapper;describe(\"initially\",function(){beforeEach(function(){return wrapper=shallow(_ref)}),test(\"renders an EnterField\",function(){expect(wrapper.find(EnterField)).toExist()}),test(\"does not render a UI\",function(){expect(wrapper.find(UI)).not.toExist()}),describe(\"when starting a game\",function(){var startState={fake:\"state\"},_ref2=/*#__PURE__*/React.createElement(Hangman,{answer:\"indigo\"});beforeEach(function(){getNewGame.mockReturnValue(startState),wrapper=shallow(_ref2);var submitter=wrapper.find(EnterField).prop(\"onSubmit\");submitter(\"indigo\")}),test(\"renders a UI\",function(){expect(wrapper.find(UI)).toExist()}),test(\"passed in a new game state to UI\",function(){expect(wrapper.find(UI)).toHaveProp(\"state\",startState)}),test(\"created the new state from the give answer\",function(){expect(getNewGame).toHaveBeenCalledWith({answer:\"indigo\"})}),describe(\"when making a guess\",function(){var updatedState={updated:\"fake state\"};beforeEach(function(){performGuess.mockReturnValue(updatedState),wrapper=shallow(_ref3);var submitter=wrapper.find(EnterField).prop(\"onSubmit\");submitter(\"secret\");var makeGuess=wrapper.find(UI).prop(\"makeGuess\");makeGuess(\"x\")}),test(\"we pass updated state from logic layer to UI\",function(){expect(wrapper.find(UI)).toHaveProp(\"state\",updatedState)}),test(\"the performGuess logic was called correctly\",function(){expect(performGuess).toHaveBeenCalledWith(\"x\",startState)})})})})});"},"apps/Hangman/logic/getLetters.test.js":{"raw":"import { getLetters } from './getLetters'\n\ndescribe('the getLetters Hangman helper', () => {\n  describe('when user has guessed nothing', () => {\n    const state = {\n      guesses: [],\n      answer: 'plane',\n      maxGuesses: 4,\n    }\n    test('we get a `null` per letter in the answer', () => {\n      const result = getLetters(state)\n      expect(result).toEqual([null, null, null, null, null])\n    })\n  })\n  describe('when the user has guessed some letters', () => {\n    const state = {\n      guesses: ['x', 'o', 'e'],\n      answer: 'monkey',\n      maxGuesses: 4,\n    }\n    test('those letters are included, the rest is null', () => {\n      const result = getLetters(state)\n      expect(result).toEqual([null, 'o', null, null, 'e', null])\n    })\n  })\n  describe('when the user has guessed the full word', () => {\n    const state = {\n      guesses: ['x', 'o', 'door'],\n      answer: 'door',\n      maxGuesses: 4,\n    }\n    test('all letters are revealed', () => {\n      const result = getLetters(state)\n      expect(result).toEqual(['d', 'o', 'o', 'r'])\n    })\n  })\n})\n","compiled":"import{getLetters}from\"./getLetters\";describe(\"the getLetters Hangman helper\",function(){describe(\"when user has guessed nothing\",function(){var state={guesses:[],answer:\"plane\",maxGuesses:4};test(\"we get a `null` per letter in the answer\",function(){var result=getLetters(state);expect(result).toEqual([null,null,null,null,null])})}),describe(\"when the user has guessed some letters\",function(){var state={guesses:[\"x\",\"o\",\"e\"],answer:\"monkey\",maxGuesses:4};test(\"those letters are included, the rest is null\",function(){var result=getLetters(state);expect(result).toEqual([null,\"o\",null,null,\"e\",null])})}),describe(\"when the user has guessed the full word\",function(){var state={guesses:[\"x\",\"o\",\"door\"],answer:\"door\",maxGuesses:4};test(\"all letters are revealed\",function(){var result=getLetters(state);expect(result).toEqual([\"d\",\"o\",\"o\",\"r\"])})})});"},"apps/Hangman/logic/getNbrOfErrors.test.js":{"raw":"import { getNbrOfErrors } from './getNbrOfErrors'\n\ndescribe('the getNbrOfErrors Hangman helper', () => {\n  describe('when user has guessed nothing', () => {\n    const state = {\n      guesses: [],\n      answer: 'plane',\n      maxGuesses: 4,\n    }\n    test('we get 0', () => {\n      const result = getNbrOfErrors(state)\n      expect(result).toEqual(0)\n    })\n  })\n  describe('when the user has made a few guesses', () => {\n    const state = {\n      guesses: ['x', 'o', 'e', 'donkey', 'monkey'],\n      answer: 'monkey',\n      maxGuesses: 4,\n    }\n    test('only the errors are counted', () => {\n      const result = getNbrOfErrors(state)\n      expect(result).toEqual(2)\n    })\n  })\n})\n","compiled":"import{getNbrOfErrors}from\"./getNbrOfErrors\";describe(\"the getNbrOfErrors Hangman helper\",function(){describe(\"when user has guessed nothing\",function(){var state={guesses:[],answer:\"plane\",maxGuesses:4};test(\"we get 0\",function(){var result=getNbrOfErrors(state);expect(result).toEqual(0)})}),describe(\"when the user has made a few guesses\",function(){var state={guesses:[\"x\",\"o\",\"e\",\"donkey\",\"monkey\"],answer:\"monkey\",maxGuesses:4};test(\"only the errors are counted\",function(){var result=getNbrOfErrors(state);expect(result).toEqual(2)})})});"},"apps/Hangman/logic/getStatus.test.js":{"raw":"import { getStatus } from './getStatus'\n\ndescribe('the getStatus Hangman helper', () => {\n  describe('when user has made max number of errors', () => {\n    const state = {\n      guesses: ['x', 'y', 'z', 'm'],\n      answer: 'plane',\n      maxGuesses: 4,\n    }\n    test('we get `lost`', () => {\n      const result = getStatus(state)\n      expect(result).toEqual('lost')\n    })\n  })\n  describe('when user has guessed all individual letters', () => {\n    const state = {\n      guesses: ['a', 'o', 'r', 'd'],\n      answer: 'door',\n      maxGuesses: 4,\n    }\n    test('we get `won`', () => {\n      const result = getStatus(state)\n      expect(result).toEqual('won')\n    })\n  })\n  describe('when user has guessed the correct word', () => {\n    const state = {\n      guesses: ['a', 'o', 'r', 'door'],\n      answer: 'door',\n      maxGuesses: 4,\n    }\n    test('we get `won`', () => {\n      const result = getStatus(state)\n      expect(result).toEqual('won')\n    })\n  })\n  describe('when user has guesses remaining', () => {\n    const state = {\n      guesses: ['a', 'o', 'm'],\n      answer: 'door',\n      maxGuesses: 4,\n    }\n    test('we get `playing`', () => {\n      const result = getStatus(state)\n      expect(result).toEqual('playing')\n    })\n  })\n})\n","compiled":"import{getStatus}from\"./getStatus\";describe(\"the getStatus Hangman helper\",function(){describe(\"when user has made max number of errors\",function(){var state={guesses:[\"x\",\"y\",\"z\",\"m\"],answer:\"plane\",maxGuesses:4};test(\"we get `lost`\",function(){var result=getStatus(state);expect(result).toEqual(\"lost\")})}),describe(\"when user has guessed all individual letters\",function(){var state={guesses:[\"a\",\"o\",\"r\",\"d\"],answer:\"door\",maxGuesses:4};test(\"we get `won`\",function(){var result=getStatus(state);expect(result).toEqual(\"won\")})}),describe(\"when user has guessed the correct word\",function(){var state={guesses:[\"a\",\"o\",\"r\",\"door\"],answer:\"door\",maxGuesses:4};test(\"we get `won`\",function(){var result=getStatus(state);expect(result).toEqual(\"won\")})}),describe(\"when user has guesses remaining\",function(){var state={guesses:[\"a\",\"o\",\"m\"],answer:\"door\",maxGuesses:4};test(\"we get `playing`\",function(){var result=getStatus(state);expect(result).toEqual(\"playing\")})})});"},"apps/Hangman/logic/performGuess.test.js":{"raw":"import { performGuess } from './performGuess'\n\ndescribe('the Hangman performGuess logic function', () => {\n  describe('when game is in progress', () => {\n    const state = {\n      guesses: ['a', 'o'],\n      answer: 'plane',\n      maxGuesses: 4,\n    }\n    test('new guesses are added to the state', () => {\n      const result = performGuess('i', state)\n      expect(result).toEqual({\n        ...state,\n        guesses: state.guesses.concat('i'),\n      })\n    })\n    test('empty guesses are ignored', () => {\n      const result = performGuess('', state)\n      expect(result).toEqual(state)\n    })\n    test('repeat guesses are ignored', () => {\n      const result = performGuess('a', state)\n      expect(result).toEqual(state)\n    })\n  })\n  describe('when game is won', () => {\n    const state = {\n      guesses: ['a', 'e', 'plane'],\n      answer: 'plane',\n      maxGuesses: 4,\n    }\n    test('guesses are ignored', () => {\n      const result = performGuess('p', state)\n      expect(result).toEqual(state)\n    })\n  })\n  describe('when game is lost', () => {\n    const state = {\n      guesses: ['i', 'a', 'o', 'y', 'x'],\n      answer: 'plane',\n      maxGuesses: 4,\n    }\n    test('guesses are ignored', () => {\n      const result = performGuess('p', state)\n      expect(result).toEqual(state)\n    })\n  })\n})\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.array.concat\";import\"core-js/modules/es.array.filter\";import\"core-js/modules/es.array.for-each\";import\"core-js/modules/es.object.define-property\";import\"core-js/modules/es.object.get-own-property-descriptor\";import\"core-js/modules/es.object.keys\";import\"core-js/modules/web.dom-collections.for-each\";function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null==arguments[i]?{}:arguments[i],ownKeys=Object.keys(source);\"function\"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}import{performGuess}from\"./performGuess\";describe(\"the Hangman performGuess logic function\",function(){describe(\"when game is in progress\",function(){var state={guesses:[\"a\",\"o\"],answer:\"plane\",maxGuesses:4};test(\"new guesses are added to the state\",function(){var result=performGuess(\"i\",state);expect(result).toEqual(_objectSpread({},state,{guesses:state.guesses.concat(\"i\")}))}),test(\"empty guesses are ignored\",function(){var result=performGuess(\"\",state);expect(result).toEqual(state)}),test(\"repeat guesses are ignored\",function(){var result=performGuess(\"a\",state);expect(result).toEqual(state)})}),describe(\"when game is won\",function(){var state={guesses:[\"a\",\"e\",\"plane\"],answer:\"plane\",maxGuesses:4};test(\"guesses are ignored\",function(){var result=performGuess(\"p\",state);expect(result).toEqual(state)})}),describe(\"when game is lost\",function(){var state={guesses:[\"i\",\"a\",\"o\",\"y\",\"x\"],answer:\"plane\",maxGuesses:4};test(\"guesses are ignored\",function(){var result=performGuess(\"p\",state);expect(result).toEqual(state)})})});"},"apps/Hangman/components/EnterField/EnterField.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { EnterField } from '../EnterField'\n\nstoriesOf('apps/Hangman/components/EnterField', module).add(\n  'submits to console',\n  () => {\n    const callback = value => console.log('Received submission', value)\n    return <EnterField onSubmit={callback} placeholder=\"Type and hit Enter\" />\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{EnterField}from\"../EnterField\";storiesOf(\"apps/Hangman/components/EnterField\",module).add(\"submits to console\",function(){return React.createElement(EnterField,{onSubmit:function callback(value){return console.log(\"Received submission\",value)},placeholder:\"Type and hit Enter\"})});"},"apps/Hangman/components/EnterField/EnterField.test.jsx":{"raw":"/**\n * @jest-environment jsdom\n */\n\nimport React from 'react'\nimport { mount } from 'enzyme'\n\nimport { EnterField } from '.'\n\ndescribe('The HangMan EnterField component', () => {\n  let wrapper, input, callback\n  const placeholder = 'write stuff here'\n  beforeEach(() => {\n    callback = jest.fn()\n    wrapper = mount(\n      <EnterField onSubmit={callback} placeholder={placeholder} />\n    )\n    input = wrapper.find('[data-qa=\"input-field\"]')\n  })\n  test('puts the placeholder on the input', () => {\n    expect(input).toHaveProp('placeholder', placeholder)\n  })\n  describe('when making an input', () => {\n    input = 'a'\n    beforeEach(() => {\n      wrapper = mount(\n        <EnterField onSubmit={callback} placeholder={placeholder} />\n      )\n      input = wrapper.find('[data-qa=\"input-field\"]')\n      input.getDOMNode().value = 'a'\n      input.simulate('keyPress', { key: 'Enter' })\n    })\n    test('submits the input to the callback', () => {\n      expect(callback).toHaveBeenCalledWith('a')\n    })\n    test('clears the input field', () => {\n      expect(input.getDOMNode().value).toEqual('')\n    })\n  })\n  describe('when gets disabled flag', () => {\n    beforeEach(() => {\n      wrapper = mount(<EnterField onSubmit={callback} disabled />)\n      input = wrapper.find('[data-qa=\"input-field\"]')\n    })\n    test('the input is disabled', () => {\n      expect(input).toHaveProp('disabled', true)\n    })\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";/**\n * @jest-environment jsdom\n */import React from\"react\";import{mount}from\"enzyme\";import{EnterField}from\".\";describe(\"The HangMan EnterField component\",function(){var wrapper,input,callback,placeholder=\"write stuff here\",_ref=/*#__PURE__*/React.createElement(EnterField,{onSubmit:callback,placeholder:placeholder});beforeEach(function(){callback=jest.fn(),wrapper=mount(_ref),input=wrapper.find(\"[data-qa=\\\"input-field\\\"]\")}),test(\"puts the placeholder on the input\",function(){expect(input).toHaveProp(\"placeholder\",placeholder)});var _ref2=/*#__PURE__*/React.createElement(EnterField,{onSubmit:callback,placeholder:placeholder});describe(\"when making an input\",function(){input=\"a\",beforeEach(function(){wrapper=mount(_ref2),input=wrapper.find(\"[data-qa=\\\"input-field\\\"]\"),input.getDOMNode().value=\"a\",input.simulate(\"keyPress\",{key:\"Enter\"})}),test(\"submits the input to the callback\",function(){expect(callback).toHaveBeenCalledWith(\"a\")}),test(\"clears the input field\",function(){expect(input.getDOMNode().value).toEqual(\"\")})});var _ref3=/*#__PURE__*/React.createElement(EnterField,{onSubmit:callback,disabled:!0});describe(\"when gets disabled flag\",function(){beforeEach(function(){wrapper=mount(_ref3),input=wrapper.find(\"[data-qa=\\\"input-field\\\"]\")}),test(\"the input is disabled\",function(){expect(input).toHaveProp(\"disabled\",!0)})})});"},"apps/Hangman/components/Gallow/Gallow.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\nimport { select } from '@storybook/addon-knobs'\n\nimport { Gallow } from '.'\n\nstoriesOf('apps/Hangman/components/Gallow', module).add(\n  'choose with knobs',\n  () => <Gallow nbrOfErrors={select('Frame', [0, 1, 2, 3, 4], 0)} />,\n  {\n    notes: {\n      markdown: `The component responsible for drawing the gallow.`,\n    },\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{select}from\"@storybook/addon-knobs\";import{Gallow}from\".\";storiesOf(\"apps/Hangman/components/Gallow\",module).add(\"choose with knobs\",function(){return React.createElement(Gallow,{nbrOfErrors:select(\"Frame\",[0,1,2,3,4],0)})},{notes:{markdown:\"The component responsible for drawing the gallow.\"}});"},"apps/Hangman/components/Gallow/Gallow.test.jsx":{"raw":"import { Gallow } from './'\nimport React from 'react'\nimport { shallow } from 'enzyme'\n\njest.mock('./frames', () => ({ frames: ['test0', 'test1', 'test2'] }))\n\ndescribe('the Gallow component', () => {\n  test('picks a frame according to given nbr of errors', () => {\n    const wrapper = shallow(<Gallow nbrOfErrors={2} />)\n    expect(wrapper.find('[data-qa=\"gallow\"]')).toHaveText('test2')\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";import{Gallow}from\"./\";import React from\"react\";import{shallow}from\"enzyme\";jest.mock(\"./frames\",function(){return{frames:[\"test0\",\"test1\",\"test2\"]}});var _ref=/*#__PURE__*/React.createElement(Gallow,{nbrOfErrors:2});describe(\"the Gallow component\",function(){test(\"picks a frame according to given nbr of errors\",function(){var wrapper=shallow(_ref);expect(wrapper.find(\"[data-qa=\\\"gallow\\\"]\")).toHaveText(\"test2\")})});"},"apps/Hangman/components/GuessHistory/GuessHistory.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { GuessHistory } from '.'\n\nstoriesOf('apps/Hangman/components/GuessHistory', module).add('basic', () => {\n  const guesses = ['a', 'e', 'aeroplane']\n  return <GuessHistory guesses={guesses} />\n})\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{GuessHistory}from\".\";storiesOf(\"apps/Hangman/components/GuessHistory\",module).add(\"basic\",function(){return React.createElement(GuessHistory,{guesses:[\"a\",\"e\",\"aeroplane\"]})});"},"apps/Hangman/components/GuessHistory/GuessHistory.test.jsx":{"raw":"import React from 'react'\nimport { shallow } from 'enzyme'\nimport { GuessHistory } from '.'\n\ndescribe('The hangman GuessHistory component', () => {\n  test('should render all the given guesses', () => {\n    const guesses = ['aeroplane', 'monkey', 'x']\n    const wrapper = shallow(<GuessHistory guesses={guesses} />)\n    for (const guess of guesses) {\n      expect(wrapper).toIncludeText(guess)\n    }\n  })\n})\n","compiled":"import React from\"react\";import{shallow}from\"enzyme\";import{GuessHistory}from\".\";describe(\"The hangman GuessHistory component\",function(){test(\"should render all the given guesses\",function(){for(var guess,guesses=[\"aeroplane\",\"monkey\",\"x\"],wrapper=shallow(React.createElement(GuessHistory,{guesses:guesses})),_i=0,_guesses=guesses;_i<_guesses.length;_i++)guess=_guesses[_i],expect(wrapper).toIncludeText(guess)})});"},"apps/Hangman/components/Status/Status.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\nimport { select, number } from '@storybook/addon-knobs'\n\nimport { Status } from '.'\n\nstoriesOf('apps/Hangman/components/Status', module).add(\n  'choose with knobs',\n  () => (\n    <Status\n      status={select('Status', ['won', 'lost', 'playing'], 'playing')}\n      remaining={number('Remaining', 4)}\n    />\n  )\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{select,number}from\"@storybook/addon-knobs\";import{Status}from\".\";storiesOf(\"apps/Hangman/components/Status\",module).add(\"choose with knobs\",function(){return React.createElement(Status,{status:select(\"Status\",[\"won\",\"lost\",\"playing\"],\"playing\"),remaining:number(\"Remaining\",4)})});"},"apps/Hangman/components/Status/Status.test.jsx":{"raw":"import React from 'react'\nimport { shallow } from 'enzyme'\n\nimport { Status } from '.'\n\ndescribe('The HangMan Status component', () => {\n  test('shows message to losers', () => {\n    const wrapper = shallow(<Status status=\"lost\" />)\n    expect(wrapper).toIncludeText('You lose')\n  })\n  test('shows message to winners', () => {\n    const wrapper = shallow(<Status status=\"won\" />)\n    expect(wrapper).toIncludeText('You win')\n  })\n  test('shows instruction during game', () => {\n    const wrapper = shallow(<Status status=\"playing\" remaining={2} />)\n    expect(wrapper).toIncludeText('Guess')\n    expect(wrapper).toIncludeText('2')\n  })\n})\n","compiled":"import React from\"react\";import{shallow}from\"enzyme\";import{Status}from\".\";var _ref=/*#__PURE__*/React.createElement(Status,{status:\"lost\"}),_ref2=/*#__PURE__*/React.createElement(Status,{status:\"won\"}),_ref3=/*#__PURE__*/React.createElement(Status,{status:\"playing\",remaining:2});describe(\"The HangMan Status component\",function(){test(\"shows message to losers\",function(){var wrapper=shallow(_ref);expect(wrapper).toIncludeText(\"You lose\")}),test(\"shows message to winners\",function(){var wrapper=shallow(_ref2);expect(wrapper).toIncludeText(\"You win\")}),test(\"shows instruction during game\",function(){var wrapper=shallow(_ref3);expect(wrapper).toIncludeText(\"Guess\"),expect(wrapper).toIncludeText(\"2\")})});"},"apps/Hangman/components/UI/UI.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { UI } from '.'\n\nconst almostDead = {\n  answer: 'aeroplane',\n  maxGuesses: 4,\n  guesses: ['a', 'e', 'x', 'n', 'u'],\n}\n\nconst justBeginning = {\n  answer: 'malediction',\n  maxGuesses: 4,\n  guesses: [],\n}\n\nconst makeGuess = guess => console.log('received guess', guess)\n\nstoriesOf('apps/Hangman/components/UI', module)\n  .add('almost dead', () => <UI state={almostDead} makeGuess={makeGuess} />)\n  .add('just beginning', () => (\n    <UI state={justBeginning} makeGuess={makeGuess} />\n  ))\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{UI}from\".\";var almostDead={answer:\"aeroplane\",maxGuesses:4,guesses:[\"a\",\"e\",\"x\",\"n\",\"u\"]},justBeginning={answer:\"malediction\",maxGuesses:4,guesses:[]},makeGuess=function(guess){return console.log(\"received guess\",guess)},_ref=/*#__PURE__*/React.createElement(UI,{state:almostDead,makeGuess:makeGuess}),_ref2=/*#__PURE__*/React.createElement(UI,{state:justBeginning,makeGuess:makeGuess});storiesOf(\"apps/Hangman/components/UI\",module).add(\"almost dead\",function(){return _ref}).add(\"just beginning\",function(){return _ref2});"},"apps/Hangman/components/UI/UI.test.jsx":{"raw":"import React from 'react'\nimport { shallow } from 'enzyme'\n\njest.mock('../../logic/getLetters', () => ({ getLetters: jest.fn() }))\njest.mock('../../logic/getNbrOfErrors', () => ({\n  getNbrOfErrors: jest.fn(),\n}))\njest.mock('../../logic/getStatus', () => ({ getStatus: jest.fn() }))\n\nimport { getLetters, getNbrOfErrors, getStatus } from '../../logic'\n\nimport { UI } from '.'\nimport { EnterField } from '../EnterField'\nimport { Word } from '../Word'\nimport { GuessHistory } from '../GuessHistory'\nimport { Gallow } from '../Gallow'\nimport { Status } from '../Status'\n\ndescribe('The HangMan UI component', () => {\n  const state = {\n    guesses: ['a', 'o'],\n    answer: 'plane',\n    maxGuesses: 4,\n  }\n  let wrapper, callback\n  beforeEach(() => {\n    callback = jest.fn()\n    wrapper = shallow(<UI makeGuess={callback} state={state} />)\n  })\n  describe('the EnterField usage', () => {\n    test('it renders EnterField', () => {\n      expect(wrapper.find(EnterField)).toExist()\n    })\n    test('it passes the callback correctly', () => {\n      expect(wrapper.find(EnterField)).toHaveProp('onSubmit', callback)\n    })\n    describe('when getStatus returns \"playing\"', () => {\n      beforeEach(() => {\n        getStatus.mockReturnValue('playing')\n        wrapper = shallow(<UI makeGuess={callback} state={state} />)\n      })\n      test('it passes disabled=false', () => {\n        expect(wrapper.find(EnterField)).toHaveProp('disabled', false)\n      })\n    })\n    describe('when getStatus does not returns \"playing\"', () => {\n      beforeEach(() => {\n        getStatus.mockReturnValue('won')\n        wrapper = shallow(<UI makeGuess={callback} state={state} />)\n      })\n      test('it passes disabled=true', () => {\n        expect(wrapper.find(EnterField)).toHaveProp('disabled', true)\n      })\n    })\n  })\n  describe('the Word usage', () => {\n    const letters = ['a', null, 'b']\n    beforeEach(() => {\n      getLetters.mockReturnValue(letters)\n      wrapper = shallow(<UI makeGuess={callback} state={state} />)\n    })\n    test('it renders Word', () => {\n      expect(wrapper.find(Word)).toExist()\n    })\n    test('it passed the return value from getLetters', () => {\n      expect(wrapper.find(Word)).toHaveProp('letters', letters)\n    })\n    test('it passed the current state to getLetters', () => {\n      expect(getLetters).toHaveBeenCalledWith(state)\n    })\n  })\n  describe('the GuessHistory usage', () => {\n    test('it renders GuessHistory', () => {\n      expect(wrapper.find(GuessHistory)).toExist()\n    })\n    test('it passed guesses from state', () => {\n      expect(wrapper.find(GuessHistory)).toHaveProp('guesses', state.guesses)\n    })\n  })\n  describe('the Gallow usage', () => {\n    const nbrOfErrors = 666\n    beforeEach(() => {\n      getNbrOfErrors.mockReturnValue(nbrOfErrors)\n      wrapper = shallow(<UI makeGuess={callback} state={state} />)\n    })\n    test('it renders Gallow', () => {\n      expect(wrapper.find(Gallow)).toExist()\n    })\n    test('it passed the return value from getNbrOfErrors', () => {\n      expect(wrapper.find(Gallow)).toHaveProp('nbrOfErrors', nbrOfErrors)\n    })\n    test('it passed the current state to getNbrOfErrors', () => {\n      expect(getNbrOfErrors).toHaveBeenCalledWith(state)\n    })\n  })\n  describe('the Status usage', () => {\n    const status = 'foobar'\n    const nbrOfErrors = 777\n    beforeEach(() => {\n      getStatus.mockReturnValue(status)\n      getNbrOfErrors.mockReturnValue(nbrOfErrors)\n      wrapper = shallow(<UI makeGuess={callback} state={state} />)\n    })\n    test('it renders Status', () => {\n      expect(wrapper.find(Status)).toExist()\n    })\n    test('it passed the return value from getStatus', () => {\n      expect(wrapper.find(Status)).toHaveProp('status', status)\n    })\n    test('it passed the current state to getStatus', () => {\n      expect(getStatus).toHaveBeenCalledWith(state)\n    })\n    test('it passed correct remaining count', () => {\n      expect(wrapper.find(Status)).toHaveProp(\n        'remaining',\n        state.maxGuesses - nbrOfErrors - 1\n      )\n    })\n  })\n})\n","compiled":"import\"core-js/modules/es.array.find\";import React from\"react\";import{shallow}from\"enzyme\";jest.mock(\"../../logic/getLetters\",function(){return{getLetters:jest.fn()}}),jest.mock(\"../../logic/getNbrOfErrors\",function(){return{getNbrOfErrors:jest.fn()}}),jest.mock(\"../../logic/getStatus\",function(){return{getStatus:jest.fn()}});import{getLetters,getNbrOfErrors,getStatus}from\"../../logic\";import{UI}from\".\";import{EnterField}from\"../EnterField\";import{Word}from\"../Word\";import{GuessHistory}from\"../GuessHistory\";import{Gallow}from\"../Gallow\";import{Status}from\"../Status\";describe(\"The HangMan UI component\",function(){var wrapper,callback,state={guesses:[\"a\",\"o\"],answer:\"plane\",maxGuesses:4},_ref=/*#__PURE__*/React.createElement(UI,{makeGuess:callback,state:state});beforeEach(function(){callback=jest.fn(),wrapper=shallow(_ref)});var _ref2=/*#__PURE__*/React.createElement(UI,{makeGuess:callback,state:state}),_ref3=/*#__PURE__*/React.createElement(UI,{makeGuess:callback,state:state});describe(\"the EnterField usage\",function(){test(\"it renders EnterField\",function(){expect(wrapper.find(EnterField)).toExist()}),test(\"it passes the callback correctly\",function(){expect(wrapper.find(EnterField)).toHaveProp(\"onSubmit\",callback)}),describe(\"when getStatus returns \\\"playing\\\"\",function(){beforeEach(function(){getStatus.mockReturnValue(\"playing\"),wrapper=shallow(_ref2)}),test(\"it passes disabled=false\",function(){expect(wrapper.find(EnterField)).toHaveProp(\"disabled\",!1)})}),describe(\"when getStatus does not returns \\\"playing\\\"\",function(){beforeEach(function(){getStatus.mockReturnValue(\"won\"),wrapper=shallow(_ref3)}),test(\"it passes disabled=true\",function(){expect(wrapper.find(EnterField)).toHaveProp(\"disabled\",!0)})})});var _ref4=/*#__PURE__*/React.createElement(UI,{makeGuess:callback,state:state});describe(\"the Word usage\",function(){var letters=[\"a\",null,\"b\"];beforeEach(function(){getLetters.mockReturnValue(letters),wrapper=shallow(_ref4)}),test(\"it renders Word\",function(){expect(wrapper.find(Word)).toExist()}),test(\"it passed the return value from getLetters\",function(){expect(wrapper.find(Word)).toHaveProp(\"letters\",letters)}),test(\"it passed the current state to getLetters\",function(){expect(getLetters).toHaveBeenCalledWith(state)})}),describe(\"the GuessHistory usage\",function(){test(\"it renders GuessHistory\",function(){expect(wrapper.find(GuessHistory)).toExist()}),test(\"it passed guesses from state\",function(){expect(wrapper.find(GuessHistory)).toHaveProp(\"guesses\",state.guesses)})});var _ref5=/*#__PURE__*/React.createElement(UI,{makeGuess:callback,state:state});describe(\"the Gallow usage\",function(){beforeEach(function(){getNbrOfErrors.mockReturnValue(666),wrapper=shallow(_ref5)}),test(\"it renders Gallow\",function(){expect(wrapper.find(Gallow)).toExist()}),test(\"it passed the return value from getNbrOfErrors\",function(){expect(wrapper.find(Gallow)).toHaveProp(\"nbrOfErrors\",666)}),test(\"it passed the current state to getNbrOfErrors\",function(){expect(getNbrOfErrors).toHaveBeenCalledWith(state)})});var _ref6=/*#__PURE__*/React.createElement(UI,{makeGuess:callback,state:state});describe(\"the Status usage\",function(){var nbrOfErrors=777;beforeEach(function(){getStatus.mockReturnValue(\"foobar\"),getNbrOfErrors.mockReturnValue(nbrOfErrors),wrapper=shallow(_ref6)}),test(\"it renders Status\",function(){expect(wrapper.find(Status)).toExist()}),test(\"it passed the return value from getStatus\",function(){expect(wrapper.find(Status)).toHaveProp(\"status\",\"foobar\")}),test(\"it passed the current state to getStatus\",function(){expect(getStatus).toHaveBeenCalledWith(state)}),test(\"it passed correct remaining count\",function(){expect(wrapper.find(Status)).toHaveProp(\"remaining\",state.maxGuesses-nbrOfErrors-1)})})});"},"apps/Hangman/components/Word/Word.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { Word } from '.'\n\nstoriesOf('apps/Hangman/components/Word', module)\n  .add('_o__e', () => <Word letters={[null, 'o', null, null, 'e']} />)\n  .add('s_r__di_i_', () => (\n    <Word letters={['s', null, 'r', null, null, 'd', 'i', null, 'i', null]} />\n  ))\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{Word}from\".\";storiesOf(\"apps/Hangman/components/Word\",module).add(\"_o__e\",function(){return React.createElement(Word,{letters:[null,\"o\",null,null,\"e\"]})}).add(\"s_r__di_i_\",function(){return React.createElement(Word,{letters:[\"s\",null,\"r\",null,null,\"d\",\"i\",null,\"i\",null]})});"},"apps/Memory/app_hook/Memory.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport React from 'react'\n\nimport { Memory } from './Memory'\n\nstoriesOf('apps/Memory/App_hook', module).add('Play Memory!', () => {\n  return <Memory nbrOfTypes={4} allowedErrors={3} />\n})\n","compiled":"import{storiesOf}from\"@storybook/react\";import React from\"react\";import{Memory}from\"./Memory\";var _ref=/*#__PURE__*/React.createElement(Memory,{nbrOfTypes:4,allowedErrors:3});storiesOf(\"apps/Memory/App_hook\",module).add(\"Play Memory!\",function(){return _ref});"},"apps/Memory/logic/getMemoryGameStatus.test.js":{"raw":"import { getMemoryGameStatus } from './getMemoryGameStatus'\n\ndescribe('the getMemoryGameStatus function', () => {\n  describe('when no errors left', () => {\n    const res = getMemoryGameStatus({\n      cards: [],\n      errorsLeft: 0,\n    })\n    test('we get \"lost\"', () => {\n      expect(res).toEqual('lost')\n    })\n  })\n  describe('when all cards are done', () => {\n    const res = getMemoryGameStatus({\n      cards: [{ type: 1, status: 'done' }, { type: 1, status: 'done' }],\n      errorsLeft: 3,\n    })\n    test('we get \"won\"', () => {\n      expect(res).toEqual('won')\n    })\n  })\n  describe('when single card is revealed', () => {\n    const res = getMemoryGameStatus({\n      cards: [{ type: 1, status: 'hidden' }, { type: 1, status: 'revealed' }],\n      errorsLeft: 3,\n    })\n    test('we get \"looking\"', () => {\n      expect(res).toEqual('looking')\n    })\n  })\n  describe('when two cards are revealed', () => {\n    const res = getMemoryGameStatus({\n      cards: [{ type: 1, status: 'revealed' }, { type: 1, status: 'revealed' }],\n      errorsLeft: 3,\n    })\n    test('we get \"mistake\"', () => {\n      expect(res).toEqual('mistake')\n    })\n  })\n})\n","compiled":"import{getMemoryGameStatus}from\"./getMemoryGameStatus\";describe(\"the getMemoryGameStatus function\",function(){describe(\"when no errors left\",function(){var res=getMemoryGameStatus({cards:[],errorsLeft:0});test(\"we get \\\"lost\\\"\",function(){expect(res).toEqual(\"lost\")})}),describe(\"when all cards are done\",function(){var res=getMemoryGameStatus({cards:[{type:1,status:\"done\"},{type:1,status:\"done\"}],errorsLeft:3});test(\"we get \\\"won\\\"\",function(){expect(res).toEqual(\"won\")})}),describe(\"when single card is revealed\",function(){var res=getMemoryGameStatus({cards:[{type:1,status:\"hidden\"},{type:1,status:\"revealed\"}],errorsLeft:3});test(\"we get \\\"looking\\\"\",function(){expect(res).toEqual(\"looking\")})}),describe(\"when two cards are revealed\",function(){var res=getMemoryGameStatus({cards:[{type:1,status:\"revealed\"},{type:1,status:\"revealed\"}],errorsLeft:3});test(\"we get \\\"mistake\\\"\",function(){expect(res).toEqual(\"mistake\")})})});"},"apps/Memory/logic/getNewMemoryGame.test.js":{"raw":"import { getNewMemoryGame } from './getNewMemoryGame'\n\ndescribe('the getNewMemoryGame function', () => {\n  describe('for 2 types and 3 errors allowed', () => {\n    const res = getNewMemoryGame(2, 3)\n    test('we get correct number of errors', () => {\n      expect(res.errorsLeft).toBe(3)\n    })\n    test('we get correct number of cards', () => {\n      expect(res.cards).toHaveLength(4)\n    })\n    test('we get correct card states', () => {\n      expect(res.cards.every(c => c.status === 'hidden')).toBeTruthy()\n    })\n    test('we get two of each type', () => {\n      expect(\n        res.cards.every(\n          c => res.cards.filter(ic => ic.type === c.type).length === 2\n        )\n      ).toBeTruthy()\n    })\n  })\n  describe('for 3 types and 5 errors allowed', () => {\n    const res = getNewMemoryGame(3, 5)\n    test('we get correct number of errors', () => {\n      expect(res.errorsLeft).toBe(5)\n    })\n    test('we get correct number of cards', () => {\n      expect(res.cards).toHaveLength(6)\n    })\n    test('we get correct card states', () => {\n      expect(res.cards.every(c => c.status === 'hidden')).toBeTruthy()\n    })\n    test('we get two of each type', () => {\n      expect(\n        res.cards.every(\n          c => res.cards.filter(ic => ic.type === c.type).length === 2\n        )\n      ).toBeTruthy()\n    })\n  })\n})\n","compiled":"import\"core-js/modules/es.array.every\";import\"core-js/modules/es.array.filter\";import{getNewMemoryGame}from\"./getNewMemoryGame\";describe(\"the getNewMemoryGame function\",function(){describe(\"for 2 types and 3 errors allowed\",function(){var res=getNewMemoryGame(2,3);test(\"we get correct number of errors\",function(){expect(res.errorsLeft).toBe(3)}),test(\"we get correct number of cards\",function(){expect(res.cards).toHaveLength(4)}),test(\"we get correct card states\",function(){expect(res.cards.every(function(c){return\"hidden\"===c.status})).toBeTruthy()}),test(\"we get two of each type\",function(){expect(res.cards.every(function(c){return 2===res.cards.filter(function(ic){return ic.type===c.type}).length})).toBeTruthy()})}),describe(\"for 3 types and 5 errors allowed\",function(){var res=getNewMemoryGame(3,5);test(\"we get correct number of errors\",function(){expect(res.errorsLeft).toBe(5)}),test(\"we get correct number of cards\",function(){expect(res.cards).toHaveLength(6)}),test(\"we get correct card states\",function(){expect(res.cards.every(function(c){return\"hidden\"===c.status})).toBeTruthy()}),test(\"we get two of each type\",function(){expect(res.cards.every(function(c){return 2===res.cards.filter(function(ic){return ic.type===c.type}).length})).toBeTruthy()})})});"},"apps/Memory/logic/performMove.test.js":{"raw":"import { performMove } from './performMove'\n\n/**\n * @typedef {import(\"../types\").MemoryGame} MemoryGame\n */\n\ndescribe('the performMove function', () => {\n  /**\n   * @type {MemoryGame}\n   */\n  let game\n  describe('when touching a revealed card when no other cards are revealed', () => {\n    beforeEach(() => {\n      game = {\n        errorsLeft: 3,\n        cards: [\n          { type: 0, status: 'hidden' },\n          { type: 0, status: 'revealed' },\n          { type: 1, status: 'hidden' },\n          { type: 1, status: 'hidden' },\n        ],\n      }\n    })\n    test('nothing happens', () => {\n      expect(performMove(game, 1)).toEqual(game)\n    })\n  })\n  describe('when touching a revealed card when another card is revealed', () => {\n    beforeEach(() => {\n      game = {\n        errorsLeft: 3,\n        cards: [\n          { type: 0, status: 'hidden' },\n          { type: 0, status: 'revealed' },\n          { type: 1, status: 'hidden' },\n          { type: 1, status: 'revealed' },\n          { type: 2, status: 'done' },\n          { type: 2, status: 'done' },\n        ],\n      }\n    })\n    test('both are flipped back', () => {\n      expect(performMove(game, 3)).toEqual({\n        errorsLeft: 3,\n        cards: [\n          { type: 0, status: 'hidden' },\n          { type: 0, status: 'hidden' },\n          { type: 1, status: 'hidden' },\n          { type: 1, status: 'hidden' },\n          { type: 2, status: 'done' },\n          { type: 2, status: 'done' },\n        ],\n      })\n    })\n  })\n  describe('when touching a done card', () => {\n    beforeEach(() => {\n      game = {\n        errorsLeft: 3,\n        cards: [\n          { type: 0, status: 'hidden' },\n          { type: 0, status: 'revealed' },\n          { type: 1, status: 'hidden' },\n          { type: 1, status: 'revealed' },\n          { type: 2, status: 'done' },\n          { type: 2, status: 'done' },\n        ],\n      }\n    })\n    test('nothing happens', () => {\n      expect(performMove(game, 4)).toEqual(game)\n    })\n  })\n  describe('when touching a hidden card and none is revealed', () => {\n    beforeEach(() => {\n      game = {\n        errorsLeft: 3,\n        cards: [\n          { type: 0, status: 'hidden' },\n          { type: 0, status: 'hidden' },\n          { type: 1, status: 'hidden' },\n          { type: 1, status: 'hidden' },\n          { type: 2, status: 'done' },\n          { type: 2, status: 'done' },\n        ],\n      }\n    })\n    test('that card is revealed', () => {\n      expect(performMove(game, 2)).toEqual({\n        errorsLeft: 3,\n        cards: [\n          { type: 0, status: 'hidden' },\n          { type: 0, status: 'hidden' },\n          { type: 1, status: 'revealed' },\n          { type: 1, status: 'hidden' },\n          { type: 2, status: 'done' },\n          { type: 2, status: 'done' },\n        ],\n      })\n    })\n  })\n  describe('when touching a hidden card and a similar is revealed', () => {\n    beforeEach(() => {\n      game = {\n        errorsLeft: 3,\n        cards: [\n          { type: 0, status: 'revealed' },\n          { type: 0, status: 'hidden' },\n          { type: 1, status: 'hidden' },\n          { type: 1, status: 'hidden' },\n          { type: 2, status: 'done' },\n          { type: 2, status: 'done' },\n        ],\n      }\n    })\n    test('both are made done', () => {\n      expect(performMove(game, 1)).toEqual({\n        errorsLeft: 3,\n        cards: [\n          { type: 0, status: 'done' },\n          { type: 0, status: 'done' },\n          { type: 1, status: 'hidden' },\n          { type: 1, status: 'hidden' },\n          { type: 2, status: 'done' },\n          { type: 2, status: 'done' },\n        ],\n      })\n    })\n  })\n  describe('when touching a hidden card and a different is revealed', () => {\n    beforeEach(() => {\n      game = {\n        errorsLeft: 3,\n        cards: [\n          { type: 0, status: 'revealed' },\n          { type: 0, status: 'hidden' },\n          { type: 1, status: 'hidden' },\n          { type: 1, status: 'hidden' },\n          { type: 2, status: 'done' },\n          { type: 2, status: 'done' },\n        ],\n      }\n    })\n    test('the hidden card is revealed and errorsLeft is diminished', () => {\n      expect(performMove(game, 2)).toEqual({\n        errorsLeft: 2,\n        cards: [\n          { type: 0, status: 'revealed' },\n          { type: 0, status: 'hidden' },\n          { type: 1, status: 'revealed' },\n          { type: 1, status: 'hidden' },\n          { type: 2, status: 'done' },\n          { type: 2, status: 'done' },\n        ],\n      })\n    })\n  })\n  describe('when touching a hidden card and two others are revealed', () => {\n    beforeEach(() => {\n      game = {\n        errorsLeft: 3,\n        cards: [\n          { type: 0, status: 'revealed' },\n          { type: 0, status: 'hidden' },\n          { type: 1, status: 'revealed' },\n          { type: 1, status: 'hidden' },\n          { type: 2, status: 'done' },\n          { type: 2, status: 'done' },\n        ],\n      }\n    })\n    test('nothing happens', () => {\n      expect(performMove(game, 4)).toEqual(game)\n    })\n  })\n})\n","compiled":"import{performMove}from\"./performMove\";/**\n * @typedef {import(\"../types\").MemoryGame} MemoryGame\n */describe(\"the performMove function\",function(){/**\n   * @type {MemoryGame}\n   */var game;describe(\"when touching a revealed card when no other cards are revealed\",function(){beforeEach(function(){game={errorsLeft:3,cards:[{type:0,status:\"hidden\"},{type:0,status:\"revealed\"},{type:1,status:\"hidden\"},{type:1,status:\"hidden\"}]}}),test(\"nothing happens\",function(){expect(performMove(game,1)).toEqual(game)})}),describe(\"when touching a revealed card when another card is revealed\",function(){beforeEach(function(){game={errorsLeft:3,cards:[{type:0,status:\"hidden\"},{type:0,status:\"revealed\"},{type:1,status:\"hidden\"},{type:1,status:\"revealed\"},{type:2,status:\"done\"},{type:2,status:\"done\"}]}}),test(\"both are flipped back\",function(){expect(performMove(game,3)).toEqual({errorsLeft:3,cards:[{type:0,status:\"hidden\"},{type:0,status:\"hidden\"},{type:1,status:\"hidden\"},{type:1,status:\"hidden\"},{type:2,status:\"done\"},{type:2,status:\"done\"}]})})}),describe(\"when touching a done card\",function(){beforeEach(function(){game={errorsLeft:3,cards:[{type:0,status:\"hidden\"},{type:0,status:\"revealed\"},{type:1,status:\"hidden\"},{type:1,status:\"revealed\"},{type:2,status:\"done\"},{type:2,status:\"done\"}]}}),test(\"nothing happens\",function(){expect(performMove(game,4)).toEqual(game)})}),describe(\"when touching a hidden card and none is revealed\",function(){beforeEach(function(){game={errorsLeft:3,cards:[{type:0,status:\"hidden\"},{type:0,status:\"hidden\"},{type:1,status:\"hidden\"},{type:1,status:\"hidden\"},{type:2,status:\"done\"},{type:2,status:\"done\"}]}}),test(\"that card is revealed\",function(){expect(performMove(game,2)).toEqual({errorsLeft:3,cards:[{type:0,status:\"hidden\"},{type:0,status:\"hidden\"},{type:1,status:\"revealed\"},{type:1,status:\"hidden\"},{type:2,status:\"done\"},{type:2,status:\"done\"}]})})}),describe(\"when touching a hidden card and a similar is revealed\",function(){beforeEach(function(){game={errorsLeft:3,cards:[{type:0,status:\"revealed\"},{type:0,status:\"hidden\"},{type:1,status:\"hidden\"},{type:1,status:\"hidden\"},{type:2,status:\"done\"},{type:2,status:\"done\"}]}}),test(\"both are made done\",function(){expect(performMove(game,1)).toEqual({errorsLeft:3,cards:[{type:0,status:\"done\"},{type:0,status:\"done\"},{type:1,status:\"hidden\"},{type:1,status:\"hidden\"},{type:2,status:\"done\"},{type:2,status:\"done\"}]})})}),describe(\"when touching a hidden card and a different is revealed\",function(){beforeEach(function(){game={errorsLeft:3,cards:[{type:0,status:\"revealed\"},{type:0,status:\"hidden\"},{type:1,status:\"hidden\"},{type:1,status:\"hidden\"},{type:2,status:\"done\"},{type:2,status:\"done\"}]}}),test(\"the hidden card is revealed and errorsLeft is diminished\",function(){expect(performMove(game,2)).toEqual({errorsLeft:2,cards:[{type:0,status:\"revealed\"},{type:0,status:\"hidden\"},{type:1,status:\"revealed\"},{type:1,status:\"hidden\"},{type:2,status:\"done\"},{type:2,status:\"done\"}]})})}),describe(\"when touching a hidden card and two others are revealed\",function(){beforeEach(function(){game={errorsLeft:3,cards:[{type:0,status:\"revealed\"},{type:0,status:\"hidden\"},{type:1,status:\"revealed\"},{type:1,status:\"hidden\"},{type:2,status:\"done\"},{type:2,status:\"done\"}]}}),test(\"nothing happens\",function(){expect(performMove(game,4)).toEqual(game)})})});"},"apps/Memory/components/Board/Board.stories.jsx":{"raw":"import React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { getNewMemoryGame } from '../../logic/getNewMemoryGame'\nimport { Board } from './Board'\n\nstoriesOf('apps/Memory/components/Board', module).add('awesome board', () => {\n  const game = getNewMemoryGame(3, 666)\n  const handler = id => console.log('Clicked card number', id)\n  return <Board game={game} handleTileClick={handler} />\n})\n","compiled":"import React from\"react\";import{storiesOf}from\"@storybook/react\";import{getNewMemoryGame}from\"../../logic/getNewMemoryGame\";import{Board}from\"./Board\";storiesOf(\"apps/Memory/components/Board\",module).add(\"awesome board\",function(){var game=getNewMemoryGame(3,666);return React.createElement(Board,{game:game,handleTileClick:function handler(id){return console.log(\"Clicked card number\",id)}})});"},"apps/Memory/components/Status/Status.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport { select } from '@storybook/addon-knobs'\n\nimport React from 'react'\n\nimport { Status } from './Status'\n\nstoriesOf('apps/Memory/components/Status', module).add(\n  'testing the Status',\n  () => {\n    const status = select(\n      'Game status',\n      ['won', 'lost', 'idle', 'mistake', 'looking'],\n      'idle'\n    )\n    return <Status status={status} />\n  }\n)\n","compiled":"import{storiesOf}from\"@storybook/react\";import{select}from\"@storybook/addon-knobs\";import React from\"react\";import{Status}from\"./Status\";storiesOf(\"apps/Memory/components/Status\",module).add(\"testing the Status\",function(){var status=select(\"Game status\",[\"won\",\"lost\",\"idle\",\"mistake\",\"looking\"],\"idle\");return React.createElement(Status,{status:status})});"},"apps/Memory/components/Tile/Tile.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport { select } from '@storybook/addon-knobs'\n\nimport React from 'react'\n\nimport { Tile } from './Tile'\n\nstoriesOf('apps/Memory/components/Tile', module).add('a memory tile', () => {\n  const status = select('Card status', ['hidden', 'revealed', 'done'], 'hidden')\n  const cardState = {\n    type: 3,\n    status: status,\n  }\n  const testClick = () => {\n    console.log('CLICK')\n  }\n  return <Tile cardState={cardState} handleClick={testClick} />\n})\n","compiled":"import{storiesOf}from\"@storybook/react\";import{select}from\"@storybook/addon-knobs\";import React from\"react\";import{Tile}from\"./Tile\";storiesOf(\"apps/Memory/components/Tile\",module).add(\"a memory tile\",function(){var status=select(\"Card status\",[\"hidden\",\"revealed\",\"done\"],\"hidden\");return React.createElement(Tile,{cardState:{type:3,status:status},handleClick:function testClick(){console.log(\"CLICK\")}})});"},"apps/Memory/components/UI/UI.stories.jsx":{"raw":"import { storiesOf } from '@storybook/react'\nimport { getNewMemoryGame } from '../../logic/getNewMemoryGame'\nimport React from 'react'\n\nimport { UI } from './UI'\n\nstoriesOf('apps/Memory/components/UI', module).add('UI', () => {\n  const game = getNewMemoryGame(3, 666)\n  const handler = id => console.log('Clicked card number', id)\n  return <UI game={game} handleTileClick={handler} />\n})\n","compiled":"import{storiesOf}from\"@storybook/react\";import{getNewMemoryGame}from\"../../logic/getNewMemoryGame\";import React from\"react\";import{UI}from\"./UI\";storiesOf(\"apps/Memory/components/UI\",module).add(\"UI\",function(){var game=getNewMemoryGame(3,666);return React.createElement(UI,{game:game,handleTileClick:function handler(id){return console.log(\"Clicked card number\",id)}})});"},"examples/User/User/_UserContext.js":{"raw":"// normally this file would be elsewhere in the app\n\nimport { createContext } from 'react'\n\nexport const UserContext = createContext({\n  name: 'anonymous',\n  loggedIn: false,\n})\n","compiled":"// normally this file would be elsewhere in the app\nimport{createContext}from\"react\";export var UserContext=createContext({name:\"anonymous\",loggedIn:!1});"},"examples/User/User_hook/_UserContext.js":{"raw":"// normally this file would be elsewhere in the app\n\nimport { createContext } from 'react'\n\nexport const UserContext = createContext({\n  name: 'anonymous',\n  loggedIn: false,\n})\n","compiled":"// normally this file would be elsewhere in the app\nimport{createContext}from\"react\";export var UserContext=createContext({name:\"anonymous\",loggedIn:!1});"},"apps/Memory/logic/getNewMemoryGame.js":{"raw":"/**\n * @typedef {import(\"../types\").MemoryGame} MemoryGame\n *\n * Creates a new memory game with randomized card order\n * @param {number} nbrOfTypes\n * @param {number} allowedErrors\n * @return {MemoryGame}\n */\nexport function getNewMemoryGame(nbrOfTypes, allowedErrors) {\n  const range = Array.from(Array(nbrOfTypes)).map((i, n) => n)\n  const cardTypes = range.concat(range)\n  const cards = []\n  while (cardTypes.length) {\n    const randomIdx = Math.floor(Math.random() * cardTypes.length)\n    cards.push({\n      type: cardTypes.splice(randomIdx, 1)[0],\n      status: 'hidden',\n    })\n  }\n  return {\n    errorsLeft: allowedErrors,\n    cards,\n  }\n}\n","compiled":"import\"core-js/modules/es.array.concat\";import\"core-js/modules/es.array.from\";import\"core-js/modules/es.array.map\";import\"core-js/modules/es.array.splice\";import\"core-js/modules/es.string.iterator\";/**\n * @typedef {import(\"../types\").MemoryGame} MemoryGame\n *\n * Creates a new memory game with randomized card order\n * @param {number} nbrOfTypes\n * @param {number} allowedErrors\n * @return {MemoryGame}\n */export function getNewMemoryGame(nbrOfTypes,allowedErrors){for(var range=Array.from(Array(nbrOfTypes)).map(function(i,n){return n}),cardTypes=range.concat(range),cards=[];cardTypes.length;){var randomIdx=Math.floor(Math.random()*cardTypes.length);cards.push({type:cardTypes.splice(randomIdx,1)[0],status:\"hidden\"})}return{errorsLeft:allowedErrors,cards:cards}}"},"examples/User/User_old/_UserContext.jsx":{"raw":"import propTypes from 'prop-types'\nimport React from 'react'\n\nexport const user = propTypes.shape({\n  name: propTypes.string,\n  loggedIn: propTypes.bool,\n})\n\nexport class UserContext extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { user: props.user }\n  }\n  getChildContext() {\n    return { user: this.state.user }\n  }\n  render() {\n    return this.props.children\n  }\n}\n\nUserContext.childContextTypes = {\n  user: user,\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.symbol.description\";import\"core-js/modules/es.symbol.iterator\";import\"core-js/modules/es.array.iterator\";import\"core-js/modules/es.object.create\";import\"core-js/modules/es.object.define-property\";import\"core-js/modules/es.object.get-prototype-of\";import\"core-js/modules/es.object.set-prototype-of\";import\"core-js/modules/es.object.to-string\";import\"core-js/modules/es.string.iterator\";import\"core-js/modules/web.dom-collections.iterator\";function _typeof(obj){return _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj},_typeof(obj)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,\"value\"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _possibleConstructorReturn(self,call){return call&&(\"object\"===_typeof(call)||\"function\"==typeof call)?call:_assertThisInitialized(self)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return self}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}function _inherits(subClass,superClass){if(\"function\"!=typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf||function(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}import propTypes from\"prop-types\";import React from\"react\";export var user=propTypes.shape({name:propTypes.string,loggedIn:propTypes.bool});export var UserContext=/*#__PURE__*/function(_React$Component){function UserContext(props){var _this;return _classCallCheck(this,UserContext),_this=_possibleConstructorReturn(this,_getPrototypeOf(UserContext).call(this,props)),_this.state={user:props.user},_this}return _inherits(UserContext,_React$Component),_createClass(UserContext,[{key:\"getChildContext\",value:function getChildContext(){return{user:this.state.user}}},{key:\"render\",value:function render(){return this.props.children}}]),UserContext}(React.Component);UserContext.displayName=\"UserContext\",UserContext.childContextTypes={user:user},UserContext.__docgenInfo={description:\"\",methods:[],displayName:\"UserContext\",childContext:{user:{type:{name:\"custom\",raw:\"user\"},required:!1}}},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/User/User_old/_UserContext.jsx\"]={name:\"UserContext\",docgenInfo:UserContext.__docgenInfo,path:\"src/examples/User/User_old/_UserContext.jsx\"});"},"apps/Memory/app_hook/Memory.jsx":{"raw":"import React, { useState, useMemo } from 'react'\n\nimport { UI } from '../components/UI/UI'\n\nimport { getNewMemoryGame } from '../logic/getNewMemoryGame'\nimport { performMove } from '../logic/performMove'\n\nexport const Memory = props => {\n  const { nbrOfTypes, allowedErrors } = props\n  const newGame = useMemo(() => getNewMemoryGame(nbrOfTypes, allowedErrors), [\n    allowedErrors,\n    nbrOfTypes,\n  ])\n  const [game, setGame] = useState(newGame)\n  const handleTileClick = id => {\n    const updatedGame = performMove(game, id)\n    setGame(updatedGame)\n  }\n\n  return <UI game={game} handleTileClick={handleTileClick} />\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.symbol.description\";import\"core-js/modules/es.symbol.iterator\";import\"core-js/modules/es.array.is-array\";import\"core-js/modules/es.array.iterator\";import\"core-js/modules/es.object.to-string\";import\"core-js/modules/es.string.iterator\";import\"core-js/modules/web.dom-collections.iterator\";function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function _iterableToArrayLimit(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i[\"return\"]||_i[\"return\"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}import React,{useState,useMemo}from\"react\";import{UI}from\"../components/UI/UI\";import{getNewMemoryGame}from\"../logic/getNewMemoryGame\";import{performMove}from\"../logic/performMove\";export var Memory=function(props){var nbrOfTypes=props.nbrOfTypes,allowedErrors=props.allowedErrors,newGame=useMemo(function(){return getNewMemoryGame(nbrOfTypes,allowedErrors)},[allowedErrors,nbrOfTypes]),_useState=useState(newGame),_useState2=_slicedToArray(_useState,2),game=_useState2[0],setGame=_useState2[1];return React.createElement(UI,{game:game,handleTileClick:function handleTileClick(id){var updatedGame=performMove(game,id);setGame(updatedGame)}})};Memory.displayName=\"Memory\",Memory.__docgenInfo={description:\"\",methods:[],displayName:\"Memory\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/apps/Memory/app_hook/Memory.jsx\"]={name:\"Memory\",docgenInfo:Memory.__docgenInfo,path:\"src/apps/Memory/app_hook/Memory.jsx\"});"},"apps/Memory/components/UI/UI.jsx":{"raw":"import React from 'react'\n\nimport { Board } from '../Board/Board'\nimport { Status } from '../Status/Status'\nimport { getMemoryGameStatus } from '../../logic/getMemoryGameStatus'\n\n/**\n * @typedef {import(\"../../types\").MemoryGame} MemoryGame\n *\n * @typedef {object} UIProps\n * @property {MemoryGame} game\n *\n * @param {UIProps} props\n */\nexport const UI = props => {\n  const status = getMemoryGameStatus(props.game)\n  return (\n    <div>\n      <Status status={status} />\n      <Board game={props.game} handleTileClick={props.handleTileClick} />\n    </div>\n  )\n}\n","compiled":"import React from\"react\";import{Board}from\"../Board/Board\";import{Status}from\"../Status/Status\";import{getMemoryGameStatus}from\"../../logic/getMemoryGameStatus\";/**\n * @typedef {import(\"../../types\").MemoryGame} MemoryGame\n *\n * @typedef {object} UIProps\n * @property {MemoryGame} game\n *\n * @param {UIProps} props\n */export var UI=function(props){var status=getMemoryGameStatus(props.game);return React.createElement(\"div\",null,React.createElement(Status,{status:status}),React.createElement(Board,{game:props.game,handleTileClick:props.handleTileClick}))};UI.displayName=\"UI\",UI.__docgenInfo={description:\"@typedef {import(\\\"../../types\\\").MemoryGame} MemoryGame\\n\\n@typedef {object} UIProps\\n@property {MemoryGame} game\\n\\n@param {UIProps} props\",methods:[],displayName:\"UI\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/apps/Memory/components/UI/UI.jsx\"]={name:\"UI\",docgenInfo:UI.__docgenInfo,path:\"src/apps/Memory/components/UI/UI.jsx\"});"},"apps/Memory/components/Tile/Tile.jsx":{"raw":"import React from 'react'\n\nimport classNames from 'classnames'\n\nimport css from './Tile.css'\n\n/**\n * @typedef {import(\"../../types\").MemoryCard} MemoryCard\n *\n * @typedef {object} TileProps\n * @property {MemoryCard} cardState\n *\n * @param {TileProps} props\n */\nexport const Tile = props => (\n  <div\n    onClick={props.handleClick}\n    className={classNames(css.tile, css[props.cardState.status])}\n  >\n    {props.cardState.status !== 'hidden' && props.cardState.type}\n  </div>\n)\n","compiled":"import React from\"react\";import classNames from\"classnames\";import css from\"./Tile.css\";/**\n * @typedef {import(\"../../types\").MemoryCard} MemoryCard\n *\n * @typedef {object} TileProps\n * @property {MemoryCard} cardState\n *\n * @param {TileProps} props\n */export var Tile=function(props){return React.createElement(\"div\",{onClick:props.handleClick,className:classNames(css.tile,css[props.cardState.status])},\"hidden\"!==props.cardState.status&&props.cardState.type)};Tile.displayName=\"Tile\",Tile.__docgenInfo={description:\"@typedef {import(\\\"../../types\\\").MemoryCard} MemoryCard\\n\\n@typedef {object} TileProps\\n@property {MemoryCard} cardState\\n\\n@param {TileProps} props\",methods:[],displayName:\"Tile\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/apps/Memory/components/Tile/Tile.jsx\"]={name:\"Tile\",docgenInfo:Tile.__docgenInfo,path:\"src/apps/Memory/components/Tile/Tile.jsx\"});"},"apps/Memory/components/Status/Status.jsx":{"raw":"import React from 'react'\n\n/**\n * @typedef {import(\"../../types\").MemoryGameStatus} MemoryGameStatus\n *\n * @typedef {object} StatusProps\n * @property {MemoryGameStatus} status\n *\n * @param {StatusProps} props\n */\nexport const Status = props => {\n  switch (props.status) {\n    case 'idle':\n      return 'Click something!'\n    case 'looking':\n      return 'I wooooonder where the OTHER one is?!'\n    case 'lost':\n      return 'GAME OVER! SAD PANDA! U SUCK'\n    case 'won':\n      return 'OMG you did it! Celebraaaaation!'\n    case 'mistake':\n      return 'NOPE! Sorry (not sorry)'\n    default:\n      return 'this should never ever ever happen'\n  }\n}\n","compiled":"import React from\"react\";/**\n * @typedef {import(\"../../types\").MemoryGameStatus} MemoryGameStatus\n *\n * @typedef {object} StatusProps\n * @property {MemoryGameStatus} status\n *\n * @param {StatusProps} props\n */export var Status=function(props){switch(props.status){case\"idle\":return\"Click something!\";case\"looking\":return\"I wooooonder where the OTHER one is?!\";case\"lost\":return\"GAME OVER! SAD PANDA! U SUCK\";case\"won\":return\"OMG you did it! Celebraaaaation!\";case\"mistake\":return\"NOPE! Sorry (not sorry)\";default:return\"this should never ever ever happen\";}};"},"apps/Memory/components/Board/Board.jsx":{"raw":"import React from 'react'\nimport css from './Board.css'\n\nimport { Tile } from '../Tile/Tile'\n\n/**\n * @typedef {import(\"../../types\").MemoryGame} MemoryGame\n *\n * @typedef {object} TileProps\n * @property {MemoryGame} game\n *\n * @param {TileProps} props\n */\nexport const Board = props => {\n  return (\n    <div className={css.board}>\n      {props.game.cards.map((card, n) => (\n        <Tile\n          key={n}\n          cardState={card}\n          handleClick={() => props.handleTileClick(n)}\n        />\n      ))}\n    </div>\n  )\n}\n","compiled":"import\"core-js/modules/es.array.map\";import React from\"react\";import css from\"./Board.css\";import{Tile}from\"../Tile/Tile\";/**\n * @typedef {import(\"../../types\").MemoryGame} MemoryGame\n *\n * @typedef {object} TileProps\n * @property {MemoryGame} game\n *\n * @param {TileProps} props\n */export var Board=function(props){return React.createElement(\"div\",{className:css.board},props.game.cards.map(function(card,n){return React.createElement(Tile,{key:n,cardState:card,handleClick:function handleClick(){return props.handleTileClick(n)}})}))};Board.displayName=\"Board\",Board.__docgenInfo={description:\"@typedef {import(\\\"../../types\\\").MemoryGame} MemoryGame\\n\\n@typedef {object} TileProps\\n@property {MemoryGame} game\\n\\n@param {TileProps} props\",methods:[],displayName:\"Board\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/apps/Memory/components/Board/Board.jsx\"]={name:\"Board\",docgenInfo:Board.__docgenInfo,path:\"src/apps/Memory/components/Board/Board.jsx\"});"},"examples/Swedify/Swedify_useRef/Swedify.jsx":{"raw":"import React, { useRef, useEffect } from 'react'\nimport { registerSwedify } from '../swedifyPlugin'\nimport $ from 'jquery'\n\nregisterSwedify()\n\nexport const Swedify = ({ children }) => {\n  const ref = useRef(null)\n  useEffect(() => {\n    $(ref.current).swedify(), [ref.current]\n  })\n  return <div ref={ref}>{children}</div>\n}\n","compiled":"import React,{useRef,useEffect}from\"react\";import{registerSwedify}from\"../swedifyPlugin\";import $ from\"jquery\";registerSwedify();export var Swedify=function(_ref){var children=_ref.children,ref=useRef(null);return useEffect(function(){$(ref.current).swedify(),[ref.current]}),React.createElement(\"div\",{ref:ref},children)};Swedify.displayName=\"Swedify\",Swedify.__docgenInfo={description:\"\",methods:[],displayName:\"Swedify\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Swedify/Swedify_useRef/Swedify.jsx\"]={name:\"Swedify\",docgenInfo:Swedify.__docgenInfo,path:\"src/examples/Swedify/Swedify_useRef/Swedify.jsx\"});"},"examples/Swedify/Swedify_stringRef/Swedify.jsx":{"raw":"import React, { createRef } from 'react'\nimport { registerSwedify } from '../swedifyPlugin'\nimport $ from 'jquery'\n\nregisterSwedify()\n\nexport class Swedify extends React.Component {\n  ref = createRef()\n  componentDidMount() {\n    // eslint-disable-next-line react/no-string-refs\n    $(this.refs.toBeSwedified).swedify()\n  }\n  render() {\n    // eslint-disable-next-line react/no-string-refs\n    return <div ref=\"toBeSwedified\">{this.props.children}</div>\n  }\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.symbol.description\";import\"core-js/modules/es.symbol.iterator\";import\"core-js/modules/es.array.concat\";import\"core-js/modules/es.array.iterator\";import\"core-js/modules/es.object.create\";import\"core-js/modules/es.object.define-property\";import\"core-js/modules/es.object.get-prototype-of\";import\"core-js/modules/es.object.set-prototype-of\";import\"core-js/modules/es.object.to-string\";import\"core-js/modules/es.string.iterator\";import\"core-js/modules/web.dom-collections.iterator\";function _typeof(obj){return _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj},_typeof(obj)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,\"value\"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _possibleConstructorReturn(self,call){return call&&(\"object\"===_typeof(call)||\"function\"==typeof call)?call:_assertThisInitialized(self)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return self}function _inherits(subClass,superClass){if(\"function\"!=typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf||function(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}import React,{createRef}from\"react\";import{registerSwedify}from\"../swedifyPlugin\";import $ from\"jquery\";registerSwedify();export var Swedify=/*#__PURE__*/function(_React$Component){function Swedify(){var _getPrototypeOf2,_this;_classCallCheck(this,Swedify);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Swedify)).call.apply(_getPrototypeOf2,[this].concat(args))),_defineProperty(_assertThisInitialized(_this),\"ref\",createRef()),_this}return _inherits(Swedify,_React$Component),_createClass(Swedify,[{key:\"componentDidMount\",value:function componentDidMount(){$(this.refs.toBeSwedified).swedify()}},{key:\"render\",value:function render(){// eslint-disable-next-line react/no-string-refs\nreturn React.createElement(\"div\",{ref:\"toBeSwedified\"},this.props.children)}}]),Swedify}(React.Component);Swedify.displayName=\"Swedify\",Swedify.__docgenInfo={description:\"\",methods:[],displayName:\"Swedify\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Swedify/Swedify_stringRef/Swedify.jsx\"]={name:\"Swedify\",docgenInfo:Swedify.__docgenInfo,path:\"src/examples/Swedify/Swedify_stringRef/Swedify.jsx\"});"},"examples/Swedify/Swedify_createRef/Swedify.jsx":{"raw":"import React, { createRef } from 'react'\nimport { registerSwedify } from '../swedifyPlugin'\nimport $ from 'jquery'\n\nregisterSwedify()\n\nexport class Swedify extends React.Component {\n  ref = createRef()\n  componentDidMount() {\n    $(this.ref.current).swedify()\n  }\n  render() {\n    return <div ref={this.ref}>{this.props.children}</div>\n  }\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.symbol.description\";import\"core-js/modules/es.symbol.iterator\";import\"core-js/modules/es.array.concat\";import\"core-js/modules/es.array.iterator\";import\"core-js/modules/es.object.create\";import\"core-js/modules/es.object.define-property\";import\"core-js/modules/es.object.get-prototype-of\";import\"core-js/modules/es.object.set-prototype-of\";import\"core-js/modules/es.object.to-string\";import\"core-js/modules/es.string.iterator\";import\"core-js/modules/web.dom-collections.iterator\";function _typeof(obj){return _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj},_typeof(obj)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,\"value\"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _possibleConstructorReturn(self,call){return call&&(\"object\"===_typeof(call)||\"function\"==typeof call)?call:_assertThisInitialized(self)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return self}function _inherits(subClass,superClass){if(\"function\"!=typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf||function(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}import React,{createRef}from\"react\";import{registerSwedify}from\"../swedifyPlugin\";import $ from\"jquery\";registerSwedify();export var Swedify=/*#__PURE__*/function(_React$Component){function Swedify(){var _getPrototypeOf2,_this;_classCallCheck(this,Swedify);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Swedify)).call.apply(_getPrototypeOf2,[this].concat(args))),_defineProperty(_assertThisInitialized(_this),\"ref\",createRef()),_this}return _inherits(Swedify,_React$Component),_createClass(Swedify,[{key:\"componentDidMount\",value:function componentDidMount(){$(this.ref.current).swedify()}},{key:\"render\",value:function render(){return React.createElement(\"div\",{ref:this.ref},this.props.children)}}]),Swedify}(React.Component);Swedify.displayName=\"Swedify\",Swedify.__docgenInfo={description:\"\",methods:[],displayName:\"Swedify\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Swedify/Swedify_createRef/Swedify.jsx\"]={name:\"Swedify\",docgenInfo:Swedify.__docgenInfo,path:\"src/examples/Swedify/Swedify_createRef/Swedify.jsx\"});"},"examples/Swedify/Swedify_callbackRef/Swedify.jsx":{"raw":"import React from 'react'\nimport { registerSwedify } from '../swedifyPlugin'\nimport $ from 'jquery'\n\nregisterSwedify()\n\n// slight cheating since ref will be called after every render\nexport const Swedify = ({ children }) => (\n  <div ref={el => $(el).swedify()}>{children}</div>\n)\n","compiled":"import React from\"react\";import{registerSwedify}from\"../swedifyPlugin\";import $ from\"jquery\";registerSwedify();// slight cheating since ref will be called after every render\nexport var Swedify=function(_ref){var children=_ref.children;return React.createElement(\"div\",{ref:function ref(el){return $(el).swedify()}},children)};Swedify.displayName=\"Swedify\",Swedify.__docgenInfo={description:\"\",methods:[],displayName:\"Swedify\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Swedify/Swedify_callbackRef/Swedify.jsx\"]={name:\"Swedify\",docgenInfo:Swedify.__docgenInfo,path:\"src/examples/Swedify/Swedify_callbackRef/Swedify.jsx\"});"},"examples/Hello/index.js":{"raw":"export * from './Hello'\n","compiled":"export*from\"./Hello\";"},"examples/Clicker/Clicker_class/index.js":{"raw":"export * from './Clicker'\n","compiled":"export*from\"./Clicker\";"},"examples/Clicker/Clicker_hook_reducer/index.js":{"raw":"export * from './Clicker'\n","compiled":"export*from\"./Clicker\";"},"examples/Clicker/Clicker_hook_state/index.js":{"raw":"export * from './Clicker'\n","compiled":"export*from\"./Clicker\";"},"examples/Clicker/Clicker_oldClass/index.js":{"raw":"export * from './Clicker'\n","compiled":"export*from\"./Clicker\";"},"examples/Clicker/Clicker_recompose/index.js":{"raw":"export * from './Clicker'\n","compiled":"export*from\"./Clicker\";"},"examples/Form/Form_controlled_class/index.js":{"raw":"export * from './Form'\n","compiled":"export*from\"./Form\";"},"examples/Form/Form_controlled_hook/index.js":{"raw":"export * from './Form'\n","compiled":"export*from\"./Form\";"},"examples/Form/Form_uncontrolled_class/index.js":{"raw":"export * from './Form'\n","compiled":"export*from\"./Form\";"},"examples/Form/Form_uncontrolled_hook/index.js":{"raw":"export * from './Form'\n","compiled":"export*from\"./Form\";"},"examples/User/User_old/index.js":{"raw":"export * from './User'\n","compiled":"export*from\"./User\";"},"apps/Hangman/app_class/index.js":{"raw":"export * from './Hangman'\n","compiled":"export*from\"./Hangman\";"},"apps/Hangman/app_hook/index.js":{"raw":"export * from './Hangman'\n","compiled":"export*from\"./Hangman\";"},"apps/Hangman/components/EnterField/index.js":{"raw":"export * from './EnterField'\n","compiled":"export*from\"./EnterField\";"},"apps/Hangman/components/Gallow/index.js":{"raw":"export * from './Gallow'\n","compiled":"export*from\"./Gallow\";"},"apps/Hangman/components/GuessHistory/index.js":{"raw":"export * from './GuessHistory'\n","compiled":"export*from\"./GuessHistory\";"},"apps/Hangman/components/Status/index.js":{"raw":"export * from './Status'\n","compiled":"export*from\"./Status\";"},"apps/Hangman/components/UI/index.js":{"raw":"export * from './UI'\n","compiled":"export*from\"./UI\";"},"apps/Hangman/components/Word/index.js":{"raw":"export * from './Word'\n","compiled":"export*from\"./Word\";"},"examples/User/User_hook/index.js":{"raw":"export * from './User'\n","compiled":"export*from\"./User\";"},"examples/User/User/index.js":{"raw":"export * from './User'\n","compiled":"export*from\"./User\";"},"apps/Memory/logic/getMemoryGameStatus.js":{"raw":"/**\n * @typedef {import(\"../types\").MemoryGame} MemoryGame\n * @typedef {import(\"../types\").MemoryGameStatus} MemoryGameStatus\n *\n * Helper function that takes a Memory game and returns current status\n * @param {MemoryGame} game\n * @return {MemoryGameStatus}\n */\nexport function getMemoryGameStatus(game) {\n  if (game.errorsLeft === 0) return 'lost'\n  const counts = game.cards.reduce(\n    (memo, card) => ({\n      ...memo,\n      [card.status]: memo[card.status] + 1,\n    }),\n    { hidden: 0, done: 0, revealed: 0 }\n  )\n  if (counts.done === game.cards.length) return 'won'\n  if (counts.revealed === 2) return 'mistake'\n  if (counts.revealed === 1) return 'looking'\n  return 'idle'\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.array.concat\";import\"core-js/modules/es.array.filter\";import\"core-js/modules/es.array.for-each\";import\"core-js/modules/es.array.reduce\";import\"core-js/modules/es.object.define-property\";import\"core-js/modules/es.object.get-own-property-descriptor\";import\"core-js/modules/es.object.keys\";import\"core-js/modules/web.dom-collections.for-each\";function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null==arguments[i]?{}:arguments[i],ownKeys=Object.keys(source);\"function\"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}/**\n * @typedef {import(\"../types\").MemoryGame} MemoryGame\n * @typedef {import(\"../types\").MemoryGameStatus} MemoryGameStatus\n *\n * Helper function that takes a Memory game and returns current status\n * @param {MemoryGame} game\n * @return {MemoryGameStatus}\n */export function getMemoryGameStatus(game){if(0===game.errorsLeft)return\"lost\";var counts=game.cards.reduce(function(memo,card){return _objectSpread({},memo,_defineProperty({},card.status,memo[card.status]+1))},{hidden:0,done:0,revealed:0});return counts.done===game.cards.length?\"won\":2===counts.revealed?\"mistake\":1===counts.revealed?\"looking\":\"idle\"}"},"apps/Memory/logic/performMove.js":{"raw":"import { getMemoryGameStatus } from './getMemoryGameStatus'\n\n/**\n * @typedef {import(\"../types\").MemoryGame} MemoryGame\n *\n * Make a move in a memory game\n * @param {MemoryGame} game\n * @param {number} cardIdx\n * @return {MemoryGame}\n */\nexport function performMove(game, cardIdx) {\n  const status = getMemoryGameStatus(game)\n  const card = game.cards[cardIdx]\n  if (status === 'lost') return game\n  if (status === 'won') return game\n  if (card.status === 'revealed') {\n    if (status === 'looking') return game\n    return {\n      ...game,\n      cards: game.cards.map(card => ({\n        ...card,\n        status: card.status === 'revealed' ? 'hidden' : card.status,\n      })),\n    }\n  }\n  if (card.status === 'hidden') {\n    if (status === 'idle') {\n      return {\n        ...game,\n        cards: game.cards.map((card, n) => ({\n          ...card,\n          status: n === cardIdx ? 'revealed' : card.status,\n        })),\n      }\n    }\n    if (status === 'looking') {\n      const otherIdx = game.cards.findIndex(card => card.status === 'revealed')\n      const otherCard = game.cards[otherIdx]\n      if (card.type === otherCard.type) {\n        return {\n          ...game,\n          cards: game.cards.map((card, n) => ({\n            ...card,\n            status: n === cardIdx || n === otherIdx ? 'done' : card.status,\n          })),\n        }\n      } else {\n        return {\n          ...game,\n          errorsLeft: game.errorsLeft - 1,\n          cards: game.cards.map((card, n) => ({\n            ...card,\n            status: n === cardIdx ? 'revealed' : card.status,\n          })),\n        }\n      }\n    }\n  }\n  return game\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.array.concat\";import\"core-js/modules/es.array.filter\";import\"core-js/modules/es.array.find-index\";import\"core-js/modules/es.array.for-each\";import\"core-js/modules/es.array.map\";import\"core-js/modules/es.object.define-property\";import\"core-js/modules/es.object.get-own-property-descriptor\";import\"core-js/modules/es.object.keys\";import\"core-js/modules/web.dom-collections.for-each\";function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null==arguments[i]?{}:arguments[i],ownKeys=Object.keys(source);\"function\"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}import{getMemoryGameStatus}from\"./getMemoryGameStatus\";/**\n * @typedef {import(\"../types\").MemoryGame} MemoryGame\n *\n * Make a move in a memory game\n * @param {MemoryGame} game\n * @param {number} cardIdx\n * @return {MemoryGame}\n */export function performMove(game,cardIdx){var status=getMemoryGameStatus(game),card=game.cards[cardIdx];if(\"lost\"===status)return game;if(\"won\"===status)return game;if(\"revealed\"===card.status)return\"looking\"===status?game:_objectSpread({},game,{cards:game.cards.map(function(card){return _objectSpread({},card,{status:\"revealed\"===card.status?\"hidden\":card.status})})});if(\"hidden\"===card.status){if(\"idle\"===status)return _objectSpread({},game,{cards:game.cards.map(function(card,n){return _objectSpread({},card,{status:n===cardIdx?\"revealed\":card.status})})});if(\"looking\"===status){var otherIdx=game.cards.findIndex(function(card){return\"revealed\"===card.status}),otherCard=game.cards[otherIdx];return card.type===otherCard.type?_objectSpread({},game,{cards:game.cards.map(function(card,n){return _objectSpread({},card,{status:n===cardIdx||n===otherIdx?\"done\":card.status})})}):_objectSpread({},game,{errorsLeft:game.errorsLeft-1,cards:game.cards.map(function(card,n){return _objectSpread({},card,{status:n===cardIdx?\"revealed\":card.status})})})}}return game}"},"examples/Swedify/swedifyPlugin.js":{"raw":"// Pretend that this is a RIDICULOUSLY complex jQuery plugin! :D\n\nimport $ from 'jquery'\n\nexport function registerSwedify() {\n  $.fn.swedify = function() {\n    return $(this).css({\n      border: '5px solid blue',\n      backgroundColor: 'yellow',\n      padding: 5,\n    })\n  }\n}\n","compiled":"// Pretend that this is a RIDICULOUSLY complex jQuery plugin! :D\nimport $ from\"jquery\";export function registerSwedify(){$.fn.swedify=function(){return $(this).css({border:\"5px solid blue\",backgroundColor:\"yellow\",padding:5})}}"},"examples/ChessPiece/index.js":{"raw":"export * from './ChessPiece'\n","compiled":"export*from\"./ChessPiece\";"},"apps/Memory/components/Tile/Tile.css":{"compiled":"\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--7-1!../../../../../.storybook/sourceCodeUtils/webpackLoader.js??ref--10-0!./Tile.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"sourceMap\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--7-1!../../../../../.storybook/sourceCodeUtils/webpackLoader.js??ref--10-0!./Tile.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--7-1!../../../../../.storybook/sourceCodeUtils/webpackLoader.js??ref--10-0!./Tile.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","raw":".tile {\n  height: 100px;\n  width: 100px;\n  border: 1px solid red;\n  display: flex;\n  margin: 3px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  font-size: 50px;\n  transition: background-color 0.5s ease;\n  cursor: pointer;\n  user-select: none;\n}\n\n.hidden {\n  background-color: brown;\n}\n\n.revealed {\n  background-color: gold;\n}\n\n.done {\n  background-color: green;\n}\n"},"apps/Memory/components/Board/Board.css":{"compiled":"\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--7-1!../../../../../.storybook/sourceCodeUtils/webpackLoader.js??ref--10-0!./Board.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"sourceMap\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--7-1!../../../../../.storybook/sourceCodeUtils/webpackLoader.js??ref--10-0!./Board.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--7-1!../../../../../.storybook/sourceCodeUtils/webpackLoader.js??ref--10-0!./Board.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","raw":".board {\n  display: flex;\n  flex-wrap: wrap;\n}\n"},"examples/Hello/Hello.jsx":{"raw":"import React from 'react'\n\nexport const Hello = props => {\n  return <span>Hello {props.name}!</span>\n}\n","compiled":"import\"core-js/modules/es.function.name\";import React from\"react\";export var Hello=function(props){return React.createElement(\"span\",null,\"Hello \",props.name,\"!\")};Hello.displayName=\"Hello\",Hello.__docgenInfo={description:\"\",methods:[],displayName:\"Hello\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Hello/Hello.jsx\"]={name:\"Hello\",docgenInfo:Hello.__docgenInfo,path:\"src/examples/Hello/Hello.jsx\"});"},"examples/Clicker/Clicker_class/Clicker.jsx":{"raw":"// @ts-check\n\nimport React, { Component } from 'react'\n\n/**\n * @typedef {import(\"../types\").ClickerProps} ClickerProps\n *\n * @typedef {object} ClickerState\n * @prop {number} count\n *\n * @extends {Component<ClickerProps, ClickerState>}\n */\nexport class Clicker extends Component {\n  /**\n   * @param {ClickerProps} props\n   */\n  constructor(props) {\n    super(props)\n    this.state = { count: props.start || 0 }\n  }\n  // note that we assign arrow functions here to make sure `this`\n  // points to the right thing when passed as a reference\n  increase = () => this.setState({ count: this.state.count + 1 })\n  decrease = () => this.setState({ count: this.state.count - 1 })\n  render() {\n    return (\n      <div>\n        Current count: <span data-qa=\"count\">{this.state.count}</span>\n        <button data-qa=\"increase\" onClick={this.increase}>\n          Increase\n        </button>\n        <button data-qa=\"decrease\" onClick={this.decrease}>\n          Decrease\n        </button>\n      </div>\n    )\n  }\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.symbol.description\";import\"core-js/modules/es.symbol.iterator\";import\"core-js/modules/es.array.iterator\";import\"core-js/modules/es.object.create\";import\"core-js/modules/es.object.define-property\";import\"core-js/modules/es.object.get-prototype-of\";import\"core-js/modules/es.object.set-prototype-of\";import\"core-js/modules/es.object.to-string\";import\"core-js/modules/es.string.iterator\";import\"core-js/modules/web.dom-collections.iterator\";function _typeof(obj){return _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj},_typeof(obj)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,\"value\"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _possibleConstructorReturn(self,call){return call&&(\"object\"===_typeof(call)||\"function\"==typeof call)?call:_assertThisInitialized(self)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return self}function _inherits(subClass,superClass){if(\"function\"!=typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf||function(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}// @ts-check\nimport React,{Component}from\"react\";/**\n * @typedef {import(\"../types\").ClickerProps} ClickerProps\n *\n * @typedef {object} ClickerState\n * @prop {number} count\n *\n * @extends {Component<ClickerProps, ClickerState>}\n */export var Clicker=/*#__PURE__*/function(_Component){/**\n   * @param {ClickerProps} props\n   */function Clicker(props){var _this;return _classCallCheck(this,Clicker),_this=_possibleConstructorReturn(this,_getPrototypeOf(Clicker).call(this,props)),_defineProperty(_assertThisInitialized(_this),\"increase\",function(){return _this.setState({count:_this.state.count+1})}),_defineProperty(_assertThisInitialized(_this),\"decrease\",function(){return _this.setState({count:_this.state.count-1})}),_this.state={count:props.start||0},_this}// note that we assign arrow functions here to make sure `this`\n// points to the right thing when passed as a reference\nreturn _inherits(Clicker,_Component),_createClass(Clicker,[{key:\"render\",value:function render(){return React.createElement(\"div\",null,\"Current count: \",React.createElement(\"span\",{\"data-qa\":\"count\"},this.state.count),React.createElement(\"button\",{\"data-qa\":\"increase\",onClick:this.increase},\"Increase\"),React.createElement(\"button\",{\"data-qa\":\"decrease\",onClick:this.decrease},\"Decrease\"))}}]),Clicker}(Component);Clicker.displayName=\"Clicker\",Clicker.__docgenInfo={description:\"@typedef {import(\\\"../types\\\").ClickerProps} ClickerProps\\n\\n@typedef {object} ClickerState\\n@prop {number} count\\n\\n@extends {Component<ClickerProps, ClickerState>}\",methods:[{name:\"increase\",docblock:null,modifiers:[],params:[],returns:null},{name:\"decrease\",docblock:null,modifiers:[],params:[],returns:null}],displayName:\"Clicker\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Clicker/Clicker_class/Clicker.jsx\"]={name:\"Clicker\",docgenInfo:Clicker.__docgenInfo,path:\"src/examples/Clicker/Clicker_class/Clicker.jsx\"});"},"examples/Clicker/Clicker_hook_reducer/Clicker.jsx":{"raw":"import React, { useReducer } from 'react'\n\n/**\n * @typedef {import(\"../types\").ClickerProps} ClickerProps\n *\n * @param {ClickerProps} props\n */\nexport const Clicker = props => {\n  const [count, dispatch] = useReducer(\n    (state, action) => state + action,\n    props.start || 0\n  )\n  return (\n    <div>\n      Current count: <span data-qa=\"count\">{count}</span>\n      <button data-qa=\"increase\" onClick={() => dispatch(1)}>\n        Increase\n      </button>\n      <button data-qa=\"decrease\" onClick={() => dispatch(-1)}>\n        Decrease\n      </button>\n    </div>\n  )\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.symbol.description\";import\"core-js/modules/es.symbol.iterator\";import\"core-js/modules/es.array.is-array\";import\"core-js/modules/es.array.iterator\";import\"core-js/modules/es.object.to-string\";import\"core-js/modules/es.string.iterator\";import\"core-js/modules/web.dom-collections.iterator\";function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function _iterableToArrayLimit(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i[\"return\"]||_i[\"return\"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}import React,{useReducer}from\"react\";/**\n * @typedef {import(\"../types\").ClickerProps} ClickerProps\n *\n * @param {ClickerProps} props\n */export var Clicker=function(props){var _useReducer=useReducer(function(state,action){return state+action},props.start||0),_useReducer2=_slicedToArray(_useReducer,2),count=_useReducer2[0],dispatch=_useReducer2[1];return React.createElement(\"div\",null,\"Current count: \",React.createElement(\"span\",{\"data-qa\":\"count\"},count),React.createElement(\"button\",{\"data-qa\":\"increase\",onClick:function onClick(){return dispatch(1)}},\"Increase\"),React.createElement(\"button\",{\"data-qa\":\"decrease\",onClick:function onClick(){return dispatch(-1)}},\"Decrease\"))};Clicker.displayName=\"Clicker\",Clicker.__docgenInfo={description:\"@typedef {import(\\\"../types\\\").ClickerProps} ClickerProps\\n\\n@param {ClickerProps} props\",methods:[],displayName:\"Clicker\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Clicker/Clicker_hook_reducer/Clicker.jsx\"]={name:\"Clicker\",docgenInfo:Clicker.__docgenInfo,path:\"src/examples/Clicker/Clicker_hook_reducer/Clicker.jsx\"});"},"examples/Clicker/Clicker_hook_state/Clicker.jsx":{"raw":"import React, { useState } from 'react'\n\n/**\n * @typedef {import(\"../types\").ClickerProps} ClickerProps\n *\n * @param {ClickerProps} props\n */\nexport const Clicker = props => {\n  const [count, setCount] = useState(props.start || 0)\n  return (\n    <div>\n      Current count: <span data-qa=\"count\">{count}</span>\n      <button data-qa=\"increase\" onClick={() => setCount(count + 1)}>\n        Increase\n      </button>\n      <button data-qa=\"decrease\" onClick={() => setCount(count - 1)}>\n        Decrease\n      </button>\n    </div>\n  )\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.symbol.description\";import\"core-js/modules/es.symbol.iterator\";import\"core-js/modules/es.array.is-array\";import\"core-js/modules/es.array.iterator\";import\"core-js/modules/es.object.to-string\";import\"core-js/modules/es.string.iterator\";import\"core-js/modules/web.dom-collections.iterator\";function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function _iterableToArrayLimit(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i[\"return\"]||_i[\"return\"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}import React,{useState}from\"react\";/**\n * @typedef {import(\"../types\").ClickerProps} ClickerProps\n *\n * @param {ClickerProps} props\n */export var Clicker=function(props){var _useState=useState(props.start||0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];return React.createElement(\"div\",null,\"Current count: \",React.createElement(\"span\",{\"data-qa\":\"count\"},count),React.createElement(\"button\",{\"data-qa\":\"increase\",onClick:function onClick(){return setCount(count+1)}},\"Increase\"),React.createElement(\"button\",{\"data-qa\":\"decrease\",onClick:function onClick(){return setCount(count-1)}},\"Decrease\"))};Clicker.displayName=\"Clicker\",Clicker.__docgenInfo={description:\"@typedef {import(\\\"../types\\\").ClickerProps} ClickerProps\\n\\n@param {ClickerProps} props\",methods:[],displayName:\"Clicker\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Clicker/Clicker_hook_state/Clicker.jsx\"]={name:\"Clicker\",docgenInfo:Clicker.__docgenInfo,path:\"src/examples/Clicker/Clicker_hook_state/Clicker.jsx\"});"},"examples/Clicker/Clicker_oldClass/Clicker.jsx":{"raw":"import React from 'react'\nimport createReactClass from 'create-react-class'\n\nexport const Clicker = createReactClass({\n  getInitialState() {\n    return { count: this.props.start || 0 }\n  },\n  increase() {\n    this.setState({ count: this.state.count + 1 })\n  },\n  decrease() {\n    this.setState({ count: this.state.count - 1 })\n  },\n  render() {\n    return (\n      <div>\n        Current count: <span data-qa=\"count\">{this.state.count}</span>\n        <button data-qa=\"increase\" onClick={this.increase}>\n          Increase\n        </button>\n        <button data-qa=\"decrease\" onClick={this.decrease}>\n          Decrease\n        </button>\n      </div>\n    )\n  },\n})\n","compiled":"import React from\"react\";import createReactClass from\"create-react-class\";export var Clicker=createReactClass({displayName:\"Clicker\",getInitialState:function getInitialState(){return{count:this.props.start||0}},increase:function increase(){this.setState({count:this.state.count+1})},decrease:function decrease(){this.setState({count:this.state.count-1})},render:function render(){return React.createElement(\"div\",null,\"Current count: \",React.createElement(\"span\",{\"data-qa\":\"count\"},this.state.count),React.createElement(\"button\",{\"data-qa\":\"increase\",onClick:this.increase},\"Increase\"),React.createElement(\"button\",{\"data-qa\":\"decrease\",onClick:this.decrease},\"Decrease\"))}});Clicker.__docgenInfo={description:\"\",methods:[{name:\"increase\",docblock:null,modifiers:[],params:[],returns:null},{name:\"decrease\",docblock:null,modifiers:[],params:[],returns:null}]},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Clicker/Clicker_oldClass/Clicker.jsx\"]={name:\"Clicker\",docgenInfo:Clicker.__docgenInfo,path:\"src/examples/Clicker/Clicker_oldClass/Clicker.jsx\"});"},"examples/Clicker/Clicker_recompose/Clicker.jsx":{"raw":"import React from 'react'\nimport { withState } from 'recompose'\n\nexport const Clicker = props => {\n  const start = props.start || 0\n  const withCountState = withState('count', 'setCount', start)\n  const InnerClicker = withCountState(({ count, setCount }) => (\n    <div>\n      Current count: <span data-qa=\"count\">{count}</span>\n      <button data-qa=\"increase\" onClick={() => setCount(count + 1)}>\n        Increase\n      </button>\n      <button data-qa=\"decrease\" onClick={() => setCount(count - 1)}>\n        Decrease\n      </button>\n    </div>\n  ))\n  return <InnerClicker />\n}\n","compiled":"import React from\"react\";import{withState}from\"recompose\";export var Clicker=function(props){var start=props.start||0,withCountState=withState(\"count\",\"setCount\",start),InnerClicker=withCountState(function(_ref){var count=_ref.count,setCount=_ref.setCount;return React.createElement(\"div\",null,\"Current count: \",React.createElement(\"span\",{\"data-qa\":\"count\"},count),React.createElement(\"button\",{\"data-qa\":\"increase\",onClick:function onClick(){return setCount(count+1)}},\"Increase\"),React.createElement(\"button\",{\"data-qa\":\"decrease\",onClick:function onClick(){return setCount(count-1)}},\"Decrease\"))});return React.createElement(InnerClicker,null)};Clicker.displayName=\"Clicker\",Clicker.__docgenInfo={description:\"\",methods:[],displayName:\"Clicker\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Clicker/Clicker_recompose/Clicker.jsx\"]={name:\"Clicker\",docgenInfo:Clicker.__docgenInfo,path:\"src/examples/Clicker/Clicker_recompose/Clicker.jsx\"});"},"examples/Form/Form_controlled_class/Form.jsx":{"raw":"import React from 'react'\n\nexport class Form extends React.Component {\n  state = { field: 'John Doe' }\n  handleType = e => this.setState({ field: e.target.value })\n  handleKeyPress = e => {\n    if (e.key === 'Enter') this.submitName()\n  }\n  submitName = () => {\n    this.props.onSubmit(this.state.field)\n    this.setState({ field: '' })\n  }\n  render() {\n    return (\n      <fieldset>\n        <legend>Enter your name</legend>\n        <input\n          data-qa=\"name-field\"\n          type=\"text\"\n          onChange={this.handleType}\n          onKeyPress={this.handleKeyPress}\n          value={this.state.field}\n        />\n        <button data-qa=\"submit-btn\" onClick={this.submitName}>\n          Submit!\n        </button>\n      </fieldset>\n    )\n  }\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.symbol.description\";import\"core-js/modules/es.symbol.iterator\";import\"core-js/modules/es.array.concat\";import\"core-js/modules/es.array.iterator\";import\"core-js/modules/es.object.create\";import\"core-js/modules/es.object.define-property\";import\"core-js/modules/es.object.get-prototype-of\";import\"core-js/modules/es.object.set-prototype-of\";import\"core-js/modules/es.object.to-string\";import\"core-js/modules/es.string.iterator\";import\"core-js/modules/web.dom-collections.iterator\";function _typeof(obj){return _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj},_typeof(obj)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,\"value\"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _possibleConstructorReturn(self,call){return call&&(\"object\"===_typeof(call)||\"function\"==typeof call)?call:_assertThisInitialized(self)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return self}function _inherits(subClass,superClass){if(\"function\"!=typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf||function(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}import React from\"react\";var _ref=/*#__PURE__*/React.createElement(\"legend\",null,\"Enter your name\");export var Form=/*#__PURE__*/function(_React$Component){function Form(){var _getPrototypeOf2,_this;_classCallCheck(this,Form);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Form)).call.apply(_getPrototypeOf2,[this].concat(args))),_defineProperty(_assertThisInitialized(_this),\"state\",{field:\"John Doe\"}),_defineProperty(_assertThisInitialized(_this),\"handleType\",function(e){return _this.setState({field:e.target.value})}),_defineProperty(_assertThisInitialized(_this),\"handleKeyPress\",function(e){\"Enter\"===e.key&&_this.submitName()}),_defineProperty(_assertThisInitialized(_this),\"submitName\",function(){_this.props.onSubmit(_this.state.field),_this.setState({field:\"\"})}),_this}return _inherits(Form,_React$Component),_createClass(Form,[{key:\"render\",value:function render(){return React.createElement(\"fieldset\",null,_ref,React.createElement(\"input\",{\"data-qa\":\"name-field\",type:\"text\",onChange:this.handleType,onKeyPress:this.handleKeyPress,value:this.state.field}),React.createElement(\"button\",{\"data-qa\":\"submit-btn\",onClick:this.submitName},\"Submit!\"))}}]),Form}(React.Component);Form.displayName=\"Form\",Form.__docgenInfo={description:\"\",methods:[{name:\"handleType\",docblock:null,modifiers:[],params:[{name:\"e\",type:null}],returns:null},{name:\"handleKeyPress\",docblock:null,modifiers:[],params:[{name:\"e\",type:null}],returns:null},{name:\"submitName\",docblock:null,modifiers:[],params:[],returns:null}],displayName:\"Form\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Form/Form_controlled_class/Form.jsx\"]={name:\"Form\",docgenInfo:Form.__docgenInfo,path:\"src/examples/Form/Form_controlled_class/Form.jsx\"});"},"examples/Form/Form_controlled_hook/Form.jsx":{"raw":"import React, { useState } from 'react'\n\nexport const Form = props => {\n  const [field, setField] = useState('John Doe')\n  const handleSubmit = () => {\n    props.onSubmit(field)\n    setField('')\n  }\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') handleSubmit()\n  }\n  const handleType = e => {\n    setField(e.target.value)\n  }\n  return (\n    <fieldset>\n      <legend>Enter your name</legend>\n      <input\n        data-qa=\"name-field\"\n        type=\"text\"\n        onChange={handleType}\n        onKeyPress={handleKeyPress}\n        value={field}\n      />\n      <button data-qa=\"submit-btn\" onClick={handleSubmit}>\n        Submit!\n      </button>\n    </fieldset>\n  )\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.symbol.description\";import\"core-js/modules/es.symbol.iterator\";import\"core-js/modules/es.array.is-array\";import\"core-js/modules/es.array.iterator\";import\"core-js/modules/es.object.to-string\";import\"core-js/modules/es.string.iterator\";import\"core-js/modules/web.dom-collections.iterator\";function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function _iterableToArrayLimit(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i[\"return\"]||_i[\"return\"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}import React,{useState}from\"react\";var _ref=/*#__PURE__*/React.createElement(\"legend\",null,\"Enter your name\");export var Form=function(props){var _useState=useState(\"John Doe\"),_useState2=_slicedToArray(_useState,2),field=_useState2[0],setField=_useState2[1],handleSubmit=function(){props.onSubmit(field),setField(\"\")};return React.createElement(\"fieldset\",null,_ref,React.createElement(\"input\",{\"data-qa\":\"name-field\",type:\"text\",onChange:function handleType(e){setField(e.target.value)},onKeyPress:function handleKeyPress(e){\"Enter\"===e.key&&handleSubmit()},value:field}),React.createElement(\"button\",{\"data-qa\":\"submit-btn\",onClick:handleSubmit},\"Submit!\"))};Form.displayName=\"Form\",Form.__docgenInfo={description:\"\",methods:[],displayName:\"Form\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Form/Form_controlled_hook/Form.jsx\"]={name:\"Form\",docgenInfo:Form.__docgenInfo,path:\"src/examples/Form/Form_controlled_hook/Form.jsx\"});"},"examples/Form/Form_uncontrolled_class/Form.jsx":{"raw":"import React, { createRef } from 'react'\n\nexport class Form extends React.Component {\n  input = createRef()\n  handleKeyPress = e => {\n    if (e.key === 'Enter') this.submitName()\n  }\n  submitName = () => {\n    this.props.onSubmit(this.input.current.value)\n    this.input.current.value = ''\n  }\n  render() {\n    return (\n      <fieldset>\n        <legend>Enter your name</legend>\n        <input\n          data-qa=\"name-field\"\n          type=\"text\"\n          onKeyPress={this.handleKeyPress}\n          ref={this.input}\n          defaultValue=\"John Doe\"\n        />\n        <button data-qa=\"submit-btn\" onClick={this.submitName}>\n          Submit!\n        </button>\n      </fieldset>\n    )\n  }\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.symbol.description\";import\"core-js/modules/es.symbol.iterator\";import\"core-js/modules/es.array.concat\";import\"core-js/modules/es.array.iterator\";import\"core-js/modules/es.object.create\";import\"core-js/modules/es.object.define-property\";import\"core-js/modules/es.object.get-prototype-of\";import\"core-js/modules/es.object.set-prototype-of\";import\"core-js/modules/es.object.to-string\";import\"core-js/modules/es.string.iterator\";import\"core-js/modules/web.dom-collections.iterator\";function _typeof(obj){return _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj},_typeof(obj)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,\"value\"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _possibleConstructorReturn(self,call){return call&&(\"object\"===_typeof(call)||\"function\"==typeof call)?call:_assertThisInitialized(self)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return self}function _inherits(subClass,superClass){if(\"function\"!=typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf||function(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}import React,{createRef}from\"react\";var _ref=/*#__PURE__*/React.createElement(\"legend\",null,\"Enter your name\");export var Form=/*#__PURE__*/function(_React$Component){function Form(){var _getPrototypeOf2,_this;_classCallCheck(this,Form);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return _this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Form)).call.apply(_getPrototypeOf2,[this].concat(args))),_defineProperty(_assertThisInitialized(_this),\"input\",createRef()),_defineProperty(_assertThisInitialized(_this),\"handleKeyPress\",function(e){\"Enter\"===e.key&&_this.submitName()}),_defineProperty(_assertThisInitialized(_this),\"submitName\",function(){_this.props.onSubmit(_this.input.current.value),_this.input.current.value=\"\"}),_this}return _inherits(Form,_React$Component),_createClass(Form,[{key:\"render\",value:function render(){return React.createElement(\"fieldset\",null,_ref,React.createElement(\"input\",{\"data-qa\":\"name-field\",type:\"text\",onKeyPress:this.handleKeyPress,ref:this.input,defaultValue:\"John Doe\"}),React.createElement(\"button\",{\"data-qa\":\"submit-btn\",onClick:this.submitName},\"Submit!\"))}}]),Form}(React.Component);Form.displayName=\"Form\",Form.__docgenInfo={description:\"\",methods:[{name:\"handleKeyPress\",docblock:null,modifiers:[],params:[{name:\"e\",type:null}],returns:null},{name:\"submitName\",docblock:null,modifiers:[],params:[],returns:null}],displayName:\"Form\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Form/Form_uncontrolled_class/Form.jsx\"]={name:\"Form\",docgenInfo:Form.__docgenInfo,path:\"src/examples/Form/Form_uncontrolled_class/Form.jsx\"});"},"examples/Form/Form_uncontrolled_hook/Form.jsx":{"raw":"import React, { useRef } from 'react'\n\nexport const Form = props => {\n  const inputRef = useRef(null)\n  const handleSubmit = () => {\n    props.onSubmit(inputRef.current.value)\n    inputRef.current.value = ''\n  }\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') handleSubmit()\n  }\n  return (\n    <fieldset>\n      <legend>Enter your name</legend>\n      <input\n        ref={inputRef}\n        data-qa=\"name-field\"\n        type=\"text\"\n        onKeyPress={handleKeyPress}\n        defaultValue=\"John Doe\"\n      />\n      <button data-qa=\"submit-btn\" onClick={handleSubmit}>\n        Submit!\n      </button>\n    </fieldset>\n  )\n}\n","compiled":"import React,{useRef}from\"react\";var _ref=/*#__PURE__*/React.createElement(\"legend\",null,\"Enter your name\");export var Form=function(props){var inputRef=useRef(null),handleSubmit=function(){props.onSubmit(inputRef.current.value),inputRef.current.value=\"\"};return React.createElement(\"fieldset\",null,_ref,React.createElement(\"input\",{ref:inputRef,\"data-qa\":\"name-field\",type:\"text\",onKeyPress:function handleKeyPress(e){\"Enter\"===e.key&&handleSubmit()},defaultValue:\"John Doe\"}),React.createElement(\"button\",{\"data-qa\":\"submit-btn\",onClick:handleSubmit},\"Submit!\"))};Form.displayName=\"Form\",Form.__docgenInfo={description:\"\",methods:[],displayName:\"Form\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/Form/Form_uncontrolled_hook/Form.jsx\"]={name:\"Form\",docgenInfo:Form.__docgenInfo,path:\"src/examples/Form/Form_uncontrolled_hook/Form.jsx\"});"},"examples/User/User_old/User.jsx":{"raw":"import React from 'react'\nimport { user } from './_UserContext'\n\nexport const User = (props, context) => {\n  return (\n    <span>\n      {context.user.name || 'Anonymous'}{' '}\n      {context.user.loggedIn && '(authenticated)'}\n    </span>\n  )\n}\n\nUser.contextTypes = { user }\n","compiled":"import\"core-js/modules/es.function.name\";import React from\"react\";import{user}from\"./_UserContext\";export var User=function(props,context){return React.createElement(\"span\",null,context.user.name||\"Anonymous\",\" \",context.user.loggedIn&&\"(authenticated)\")};User.displayName=\"User\",User.contextTypes={user:user},User.__docgenInfo={description:\"\",methods:[],displayName:\"User\",context:{user:{type:{name:\"custom\",raw:\"user\"},required:!1}}},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/User/User_old/User.jsx\"]={name:\"User\",docgenInfo:User.__docgenInfo,path:\"src/examples/User/User_old/User.jsx\"});"},"apps/Hangman/app_class/Hangman.jsx":{"raw":"import React, { Component } from 'react'\n\nimport { performGuess, getNewGame } from '../logic'\n\nimport { UI, EnterField } from '../components'\n\nexport class Hangman extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { game: null }\n  }\n  makeGuess = guess =>\n    this.setState({ game: performGuess(guess, this.state.game) })\n  startGame = answer => this.setState({ game: getNewGame({ answer }) })\n  render() {\n    if (!this.state.game) {\n      return (\n        <EnterField\n          onSubmit={this.startGame}\n          placeholder=\"Choose the secret answer\"\n        />\n      )\n    }\n    return <UI state={this.state.game} makeGuess={this.makeGuess} />\n  }\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.symbol.description\";import\"core-js/modules/es.symbol.iterator\";import\"core-js/modules/es.array.iterator\";import\"core-js/modules/es.object.create\";import\"core-js/modules/es.object.define-property\";import\"core-js/modules/es.object.get-prototype-of\";import\"core-js/modules/es.object.set-prototype-of\";import\"core-js/modules/es.object.to-string\";import\"core-js/modules/es.string.iterator\";import\"core-js/modules/web.dom-collections.iterator\";function _typeof(obj){return _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&\"function\"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj},_typeof(obj)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError(\"Cannot call a class as a function\")}function _defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,\"value\"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _possibleConstructorReturn(self,call){return call&&(\"object\"===_typeof(call)||\"function\"==typeof call)?call:_assertThisInitialized(self)}function _getPrototypeOf(o){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(o){return o.__proto__||Object.getPrototypeOf(o)},_getPrototypeOf(o)}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return self}function _inherits(subClass,superClass){if(\"function\"!=typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function\");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}function _setPrototypeOf(o,p){return _setPrototypeOf=Object.setPrototypeOf||function(o,p){return o.__proto__=p,o},_setPrototypeOf(o,p)}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}import React,{Component}from\"react\";import{performGuess,getNewGame}from\"../logic\";import{UI,EnterField}from\"../components\";export var Hangman=/*#__PURE__*/function(_Component){function Hangman(props){var _this;return _classCallCheck(this,Hangman),_this=_possibleConstructorReturn(this,_getPrototypeOf(Hangman).call(this,props)),_defineProperty(_assertThisInitialized(_this),\"makeGuess\",function(guess){return _this.setState({game:performGuess(guess,_this.state.game)})}),_defineProperty(_assertThisInitialized(_this),\"startGame\",function(answer){return _this.setState({game:getNewGame({answer:answer})})}),_this.state={game:null},_this}return _inherits(Hangman,_Component),_createClass(Hangman,[{key:\"render\",value:function render(){return this.state.game?React.createElement(UI,{state:this.state.game,makeGuess:this.makeGuess}):React.createElement(EnterField,{onSubmit:this.startGame,placeholder:\"Choose the secret answer\"})}}]),Hangman}(Component);Hangman.displayName=\"Hangman\",Hangman.__docgenInfo={description:\"\",methods:[{name:\"makeGuess\",docblock:null,modifiers:[],params:[{name:\"guess\",type:null}],returns:null},{name:\"startGame\",docblock:null,modifiers:[],params:[{name:\"answer\",type:null}],returns:null}],displayName:\"Hangman\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/apps/Hangman/app_class/Hangman.jsx\"]={name:\"Hangman\",docgenInfo:Hangman.__docgenInfo,path:\"src/apps/Hangman/app_class/Hangman.jsx\"});"},"apps/Hangman/app_hook/Hangman.jsx":{"raw":"import React, { useState } from 'react'\n\nimport { performGuess, getNewGame } from '../logic'\n\nimport { UI, EnterField } from '../components'\n\nexport const Hangman = () => {\n  const [state, setState] = useState(null)\n\n  const makeGuess = guess => setState(performGuess(guess, state))\n  const startGame = answer => setState(getNewGame({ answer }))\n\n  if (!state) {\n    return (\n      <EnterField onSubmit={startGame} placeholder=\"Choose the secret answer\" />\n    )\n  }\n\n  return <UI state={state} makeGuess={makeGuess} />\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.symbol.description\";import\"core-js/modules/es.symbol.iterator\";import\"core-js/modules/es.array.is-array\";import\"core-js/modules/es.array.iterator\";import\"core-js/modules/es.object.to-string\";import\"core-js/modules/es.string.iterator\";import\"core-js/modules/web.dom-collections.iterator\";function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}function _iterableToArrayLimit(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i[\"return\"]||_i[\"return\"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}import React,{useState}from\"react\";import{performGuess,getNewGame}from\"../logic\";import{UI,EnterField}from\"../components\";export var Hangman=function(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];return state?React.createElement(UI,{state:state,makeGuess:function makeGuess(guess){return setState(performGuess(guess,state))}}):React.createElement(EnterField,{onSubmit:function startGame(answer){return setState(getNewGame({answer:answer}))},placeholder:\"Choose the secret answer\"})};Hangman.displayName=\"Hangman\",Hangman.__docgenInfo={description:\"\",methods:[],displayName:\"Hangman\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/apps/Hangman/app_hook/Hangman.jsx\"]={name:\"Hangman\",docgenInfo:Hangman.__docgenInfo,path:\"src/apps/Hangman/app_hook/Hangman.jsx\"});"},"apps/Hangman/components/EnterField/EnterField.jsx":{"raw":"import React, { useRef } from 'react'\n\n/**\n * @typedef {object} EnterFieldProps\n * @prop {bool} disabled\n * @prop {func} onSubmit\n * @prop {string} placeholder\n *\n * A component to display an input that submits on Enter press\n * @param {EnterFieldProps} props\n */\nexport const EnterField = props => {\n  const inputRef = useRef(null)\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      props.onSubmit(inputRef.current.value)\n      inputRef.current.value = ''\n    }\n  }\n  return (\n    <div style={{ margin: '5px' }}>\n      <input\n        ref={inputRef}\n        onKeyPress={handleKeyPress}\n        disabled={props.disabled}\n        id=\"guess\"\n        placeholder={props.placeholder}\n        autoComplete=\"off\"\n        data-qa=\"input-field\"\n      />\n    </div>\n  )\n}\n","compiled":"import React,{useRef}from\"react\";/**\n * @typedef {object} EnterFieldProps\n * @prop {bool} disabled\n * @prop {func} onSubmit\n * @prop {string} placeholder\n *\n * A component to display an input that submits on Enter press\n * @param {EnterFieldProps} props\n */export var EnterField=function(props){var inputRef=useRef(null);return React.createElement(\"div\",{style:{margin:\"5px\"}},React.createElement(\"input\",{ref:inputRef,onKeyPress:function handleKeyPress(e){\"Enter\"===e.key&&(props.onSubmit(inputRef.current.value),inputRef.current.value=\"\")},disabled:props.disabled,id:\"guess\",placeholder:props.placeholder,autoComplete:\"off\",\"data-qa\":\"input-field\"}))};EnterField.displayName=\"EnterField\",EnterField.__docgenInfo={description:\"@typedef {object} EnterFieldProps\\n@prop {bool} disabled\\n@prop {func} onSubmit\\n@prop {string} placeholder\\n\\nA component to display an input that submits on Enter press\\n@param {EnterFieldProps} props\",methods:[],displayName:\"EnterField\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/apps/Hangman/components/EnterField/EnterField.jsx\"]={name:\"EnterField\",docgenInfo:EnterField.__docgenInfo,path:\"src/apps/Hangman/components/EnterField/EnterField.jsx\"});"},"apps/Hangman/components/Gallow/Gallow.jsx":{"raw":"import React from 'react'\nimport { frames } from './frames'\n\n/**\n * @typedef {object} GallowProps\n * @prop {number} nbrOfErrors\n *\n * A component to show the gallow, frame depends on number of errors\n * @param {GallowProps} props\n */\nexport const Gallow = props => {\n  return <pre data-qa=\"gallow\">{frames[props.nbrOfErrors]}</pre>\n}\n","compiled":"import React from\"react\";import{frames}from\"./frames\";/**\n * @typedef {object} GallowProps\n * @prop {number} nbrOfErrors\n *\n * A component to show the gallow, frame depends on number of errors\n * @param {GallowProps} props\n */export var Gallow=function(props){return React.createElement(\"pre\",{\"data-qa\":\"gallow\"},frames[props.nbrOfErrors])};Gallow.displayName=\"Gallow\",Gallow.__docgenInfo={description:\"@typedef {object} GallowProps\\n@prop {number} nbrOfErrors\\n\\nA component to show the gallow, frame depends on number of errors\\n@param {GallowProps} props\",methods:[],displayName:\"Gallow\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/apps/Hangman/components/Gallow/Gallow.jsx\"]={name:\"Gallow\",docgenInfo:Gallow.__docgenInfo,path:\"src/apps/Hangman/components/Gallow/Gallow.jsx\"});"},"apps/Hangman/components/Status/Status.jsx":{"raw":"/**\n * @typedef {import(\"../../types\").HangmanStatus} HangmanStatus\n *\n * @typedef {object} StatusProps\n * @prop {HangmanStatus} status The current status of the game\n * @prop {number} remaining Number of errors that can still be made\n *\n * A component to show a text description of the current status\n * @param {StatusProps} props\n */\n\nexport const Status = props => {\n  if (props.status === 'won') return 'You win! :D'\n  if (props.status === 'lost') return 'You lose :/'\n  return `Guess a letter or word! ${props.remaining} remaining.`\n}\n","compiled":"/**\n * @typedef {import(\"../../types\").HangmanStatus} HangmanStatus\n *\n * @typedef {object} StatusProps\n * @prop {HangmanStatus} status The current status of the game\n * @prop {number} remaining Number of errors that can still be made\n *\n * A component to show a text description of the current status\n * @param {StatusProps} props\n */export var Status=function(props){return\"won\"===props.status?\"You win! :D\":\"lost\"===props.status?\"You lose :/\":\"Guess a letter or word! \".concat(props.remaining,\" remaining.\")};"},"apps/Hangman/components/GuessHistory/GuessHistory.jsx":{"raw":"import React from 'react'\n\n/**\n * @typedef {import(\"../../types\").HangmanStatus} HangmanStatus\n *\n * @typedef {object} GuessHistoryProps\n * @prop {string[]} guesses All guesses made so far\n *\n * A component to show a text description of the current status\n * @param {GuessHistoryProps} props\n */\nexport const GuessHistory = props => {\n  return (\n    <React.Fragment>\n      <h4>Guesses:</h4>\n      <ul>\n        {props.guesses.map((guess, n) => (\n          <li key={n}>{guess}</li>\n        ))}\n      </ul>\n    </React.Fragment>\n  )\n}\n","compiled":"import\"core-js/modules/es.array.map\";import React from\"react\";/**\n * @typedef {import(\"../../types\").HangmanStatus} HangmanStatus\n *\n * @typedef {object} GuessHistoryProps\n * @prop {string[]} guesses All guesses made so far\n *\n * A component to show a text description of the current status\n * @param {GuessHistoryProps} props\n */var _ref=/*#__PURE__*/React.createElement(\"h4\",null,\"Guesses:\");export var GuessHistory=function(props){return React.createElement(React.Fragment,null,_ref,React.createElement(\"ul\",null,props.guesses.map(function(guess,n){return React.createElement(\"li\",{key:n},guess)})))};GuessHistory.displayName=\"GuessHistory\",GuessHistory.__docgenInfo={description:\"@typedef {import(\\\"../../types\\\").HangmanStatus} HangmanStatus\\n\\n@typedef {object} GuessHistoryProps\\n@prop {string[]} guesses All guesses made so far\\n\\nA component to show a text description of the current status\\n@param {GuessHistoryProps} props\",methods:[],displayName:\"GuessHistory\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/apps/Hangman/components/GuessHistory/GuessHistory.jsx\"]={name:\"GuessHistory\",docgenInfo:GuessHistory.__docgenInfo,path:\"src/apps/Hangman/components/GuessHistory/GuessHistory.jsx\"});"},"apps/Hangman/components/UI/UI.jsx":{"raw":"import React from 'react'\n\nimport { getLetters, getNbrOfErrors, getStatus } from '../../logic'\n\nimport { Status } from '../Status'\nimport { Gallow } from '../Gallow'\nimport { EnterField } from '../EnterField'\nimport { GuessHistory } from '../GuessHistory'\nimport { Word } from '../Word'\n\n/**\n * @typedef {import(\"../../types\").Hangman} Hangman\n *\n * @typedef {object} UIProps\n * @prop {Hangman} state The current state of the game\n * @prop {function} makeGuess callback to submit a new guess\n *\n * A component render the UI for an ongoing Hangman game\n * @param {UIProps} props\n */\nexport const UI = props => {\n  const { state, makeGuess } = props\n  const nbrOfErrors = getNbrOfErrors(state)\n  const status = getStatus(state)\n\n  return (\n    <>\n      <Status status={status} remaining={state.maxGuesses - nbrOfErrors - 1} />\n      <EnterField\n        onSubmit={makeGuess}\n        disabled={status !== 'playing'}\n        placeholder=\"Guess a letter or word\"\n      />\n      <Word letters={getLetters(state)} />\n      <Gallow nbrOfErrors={nbrOfErrors} />\n      <GuessHistory guesses={state.guesses} />\n    </>\n  )\n}\n","compiled":"import React from\"react\";import{getLetters,getNbrOfErrors,getStatus}from\"../../logic\";import{Status}from\"../Status\";import{Gallow}from\"../Gallow\";import{EnterField}from\"../EnterField\";import{GuessHistory}from\"../GuessHistory\";import{Word}from\"../Word\";/**\n * @typedef {import(\"../../types\").Hangman} Hangman\n *\n * @typedef {object} UIProps\n * @prop {Hangman} state The current state of the game\n * @prop {function} makeGuess callback to submit a new guess\n *\n * A component render the UI for an ongoing Hangman game\n * @param {UIProps} props\n */export var UI=function(props){var state=props.state,makeGuess=props.makeGuess,nbrOfErrors=getNbrOfErrors(state),status=getStatus(state);return React.createElement(React.Fragment,null,React.createElement(Status,{status:status,remaining:state.maxGuesses-nbrOfErrors-1}),React.createElement(EnterField,{onSubmit:makeGuess,disabled:\"playing\"!==status,placeholder:\"Guess a letter or word\"}),React.createElement(Word,{letters:getLetters(state)}),React.createElement(Gallow,{nbrOfErrors:nbrOfErrors}),React.createElement(GuessHistory,{guesses:state.guesses}))};UI.__docgenInfo={description:\"@typedef {import(\\\"../../types\\\").Hangman} Hangman\\n\\n@typedef {object} UIProps\\n@prop {Hangman} state The current state of the game\\n@prop {function} makeGuess callback to submit a new guess\\n\\nA component render the UI for an ongoing Hangman game\\n@param {UIProps} props\",methods:[],displayName:\"UI\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/apps/Hangman/components/UI/UI.jsx\"]={name:\"UI\",docgenInfo:UI.__docgenInfo,path:\"src/apps/Hangman/components/UI/UI.jsx\"});"},"apps/Hangman/components/Word/Word.jsx":{"raw":"import React from 'react'\n\nconst letterStyle = {\n  fontSize: '60px',\n  margin: '3px',\n  fontFamily: 'monospace',\n  backgroundColor: '#CCC',\n}\n\n/**\n * @typedef {object} WordProps\n * @prop {(string|null)[]} letters The letters in the current word\n *\n * A component to show a text description of the current status\n * @param {WordProps} props\n */\nexport const Word = props => {\n  return (\n    <div>\n      {props.letters.map((letter, n) => (\n        <span style={letterStyle} key={n}>\n          {letter || '_'}\n        </span>\n      ))}\n    </div>\n  )\n}\n","compiled":"import\"core-js/modules/es.array.map\";import React from\"react\";var letterStyle={fontSize:\"60px\",margin:\"3px\",fontFamily:\"monospace\",backgroundColor:\"#CCC\"/**\n * @typedef {object} WordProps\n * @prop {(string|null)[]} letters The letters in the current word\n *\n * A component to show a text description of the current status\n * @param {WordProps} props\n */};export var Word=function(props){return React.createElement(\"div\",null,props.letters.map(function(letter,n){return React.createElement(\"span\",{style:letterStyle,key:n},letter||\"_\")}))};Word.displayName=\"Word\",Word.__docgenInfo={description:\"@typedef {object} WordProps\\n@prop {(string|null)[]} letters The letters in the current word\\n\\nA component to show a text description of the current status\\n@param {WordProps} props\",methods:[],displayName:\"Word\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/apps/Hangman/components/Word/Word.jsx\"]={name:\"Word\",docgenInfo:Word.__docgenInfo,path:\"src/apps/Hangman/components/Word/Word.jsx\"});"},"examples/User/User_hook/User.jsx":{"raw":"import React, { useContext } from 'react'\n\nimport { UserContext } from './_UserContext'\n\nexport const User = () => {\n  const user = useContext(UserContext)\n  return (\n    <span>\n      {user.name || 'Anonymous'} {user.loggedIn && '(authenticated)'}\n    </span>\n  )\n}\n","compiled":"import\"core-js/modules/es.function.name\";import React,{useContext}from\"react\";import{UserContext}from\"./_UserContext\";export var User=function(){var user=useContext(UserContext);return React.createElement(\"span\",null,user.name||\"Anonymous\",\" \",user.loggedIn&&\"(authenticated)\")};User.displayName=\"User\",User.__docgenInfo={description:\"\",methods:[],displayName:\"User\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/User/User_hook/User.jsx\"]={name:\"User\",docgenInfo:User.__docgenInfo,path:\"src/examples/User/User_hook/User.jsx\"});"},"examples/User/User/User.jsx":{"raw":"import React from 'react'\n\nimport { UserContext } from './_UserContext'\n\nexport const User = () => {\n  return (\n    <UserContext.Consumer>\n      {value => (\n        <span>\n          {value.name || 'Anonymous'} {value.loggedIn && '(authenticated)'}\n        </span>\n      )}\n    </UserContext.Consumer>\n  )\n}\n","compiled":"import\"core-js/modules/es.function.name\";import React from\"react\";import{UserContext}from\"./_UserContext\";export var User=function(){return React.createElement(UserContext.Consumer,null,function(value){return React.createElement(\"span\",null,value.name||\"Anonymous\",\" \",value.loggedIn&&\"(authenticated)\")})};User.displayName=\"User\",User.__docgenInfo={description:\"\",methods:[],displayName:\"User\"},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/User/User/User.jsx\"]={name:\"User\",docgenInfo:User.__docgenInfo,path:\"src/examples/User/User/User.jsx\"});"},"examples/ChessPiece/ChessPiece.jsx":{"raw":"import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport Transition from 'react-transition-group/Transition'\nimport classnames from 'classnames'\n\nimport css from './ChessPiece.css'\nimport { ChessPieceProps } from './ChessPiece.types'\n\nconst char = {\n  king: '♚',\n  queen: '♛',\n  rook: '♜',\n  bishop: '♝',\n  knight: '♞',\n  pawn: '♟',\n}\n\n/**\n * @typedef {import(\"./ChessPiece.types\").ChessPieceProps} ChessPieceProps\n *\n * @param {ChessPieceProps} props\n */\nexport const ChessPiece = props => {\n  return (\n    <span\n      className={classnames(css.container, {\n        [css.available]: props.mode === 'available',\n        [css.selected]: props.mode === 'selected',\n      })}\n    >\n      <TransitionGroup>\n        <Transition key={props.piece} timeout={{ enter: 20, exit: 500 }}>\n          {status => (\n            <span\n              className={classnames(css.icon, {\n                [css.entering]: status === 'entering',\n                [css.exiting]: status === 'exiting',\n              })}\n            >\n              {char[props.piece]}\n            </span>\n          )}\n        </Transition>\n      </TransitionGroup>\n    </span>\n  )\n}\n\nChessPiece.propTypes = ChessPieceProps\n","compiled":"import\"core-js/modules/es.object.define-property\";function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}import React from\"react\";import{TransitionGroup}from\"react-transition-group\";import Transition from\"react-transition-group/Transition\";import classnames from\"classnames\";import css from\"./ChessPiece.css\";import{ChessPieceProps}from\"./ChessPiece.types\";var _char={king:\"\\u265A\",queen:\"\\u265B\",rook:\"\\u265C\",bishop:\"\\u265D\",knight:\"\\u265E\",pawn:\"\\u265F\"/**\n * @typedef {import(\"./ChessPiece.types\").ChessPieceProps} ChessPieceProps\n *\n * @param {ChessPieceProps} props\n */};export var ChessPiece=function(props){var _classnames;return React.createElement(\"span\",{className:classnames(css.container,(_classnames={},_defineProperty(_classnames,css.available,\"available\"===props.mode),_defineProperty(_classnames,css.selected,\"selected\"===props.mode),_classnames))},React.createElement(TransitionGroup,null,React.createElement(Transition,{key:props.piece,timeout:{enter:20,exit:500}},function(status){var _classnames2;return React.createElement(\"span\",{className:classnames(css.icon,(_classnames2={},_defineProperty(_classnames2,css.entering,\"entering\"===status),_defineProperty(_classnames2,css.exiting,\"exiting\"===status),_classnames2))},_char[props.piece])})))};ChessPiece.displayName=\"ChessPiece\",ChessPiece.propTypes=ChessPieceProps,ChessPiece.__docgenInfo={description:\"@typedef {import(\\\"./ChessPiece.types\\\").ChessPieceProps} ChessPieceProps\\n\\n@param {ChessPieceProps} props\",methods:[],displayName:\"ChessPiece\",composes:[\"./ChessPiece.types\"]},\"undefined\"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES[\"src/examples/ChessPiece/ChessPiece.jsx\"]={name:\"ChessPiece\",docgenInfo:ChessPiece.__docgenInfo,path:\"src/examples/ChessPiece/ChessPiece.jsx\"});"},"apps/Hangman/components/Gallow/frames.js":{"raw":"const frame0 = `\n\n\n\n\n ________\n/        \\\\\n''''''''''\n`\n\nconst frame1 = `\n\n    |\n    |\n    |\n ___|____\n/        \\\\\n''''''''''\n`\n\nconst frame2 = `\n    .________\n    |\n    |\n    |\n ___|____\n/        \\\\\n''''''''''\n`\n\nconst frame3 = `\n    .________\n    |        |\n    |        O\n    |\n ___|____\n/        \\\\\n''''''''''\n`\n\nconst frame4 = `\n    .________\n    |        |\n    |       \\\\O/\n    |        |\n ___|____   / \\\\\n/        \\\\\n''''''''''\n`\n\nexport const frames = [frame0, frame1, frame2, frame3, frame4]\n","compiled":"var frame0=\"\\n\\n\\n\\n\\n ________\\n/        \\\\\\n''''''''''\\n\",frame1=\"\\n\\n    |\\n    |\\n    |\\n ___|____\\n/        \\\\\\n''''''''''\\n\",frame2=\"\\n    .________\\n    |\\n    |\\n    |\\n ___|____\\n/        \\\\\\n''''''''''\\n\",frame3=\"\\n    .________\\n    |        |\\n    |        O\\n    |\\n ___|____\\n/        \\\\\\n''''''''''\\n\",frame4=\"\\n    .________\\n    |        |\\n    |       \\\\O/\\n    |        |\\n ___|____   / \\\\\\n/        \\\\\\n''''''''''\\n\";export var frames=[\"\\n\\n\\n\\n\\n ________\\n/        \\\\\\n''''''''''\\n\",frame1,frame2,frame3,frame4];"},"examples/ChessPiece/ChessPiece.css":{"compiled":"\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-1!../../../.storybook/sourceCodeUtils/webpackLoader.js??ref--10-0!./ChessPiece.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"sourceMap\":true,\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-1!../../../.storybook/sourceCodeUtils/webpackLoader.js??ref--10-0!./ChessPiece.css\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-1!../../../.storybook/sourceCodeUtils/webpackLoader.js??ref--10-0!./ChessPiece.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","raw":".container {\n  font-size: 100px;\n  font-family: \"Arial Unicode MS\";\n  height: 100px;\n  width: 100px;\n  line-height: 80px;\n  display: block;\n  color: red;\n  position: relative;\n}\n\n@keyframes availableAnim {\n  0% {\n    transform: scale(1, 1);\n  }\n  25% {\n    transform: scale(0.8, 0.8);\n  }\n  50% {\n    transform: scale(1, 1);\n  }\n  75% {\n    transform: scale(1.2, 1.2);\n  }\n  100% {\n    transform: scale(1, 1);\n  }\n}\n\n.available {\n  animation: availableAnim 0.85s linear infinite;\n}\n\n@keyframes selectedAnim {\n  0% {\n    transform: rotate(0);\n  }\n  25% {\n    transform: rotate(-15deg);\n  }\n  50% {\n    transform: rotate(0);\n  }\n  75% {\n    transform: rotate(15deg);\n  }\n  100% {\n    transform: rotate(0);\n  }\n}\n\n.selected {\n  animation: selectedAnim 0.85s linear infinite;\n}\n\n.icon {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  transition: opacity 500ms ease, transform 500ms ease;\n  transform: scale(1, 1);\n  opacity: 1;\n}\n\n.entering {\n  opacity: 0;\n  z-index: 2;\n  transform: scale(0.1, 0.1);\n}\n\n.exiting {\n  opacity: 0;\n  z-index: 1;\n  transform: scale(0.1, 0.1);\n}\n"},"apps/Hangman/components/index.js":{"raw":"export * from './EnterField'\nexport * from './Gallow'\nexport * from './GuessHistory'\nexport * from './Status'\nexport * from './UI'\nexport * from './Word'\n","compiled":"export*from\"./EnterField\";export*from\"./Gallow\";export*from\"./GuessHistory\";export*from\"./Status\";export*from\"./UI\";export*from\"./Word\";"},"apps/Hangman/logic/index.js":{"raw":"export * from './getLetters'\nexport * from './getNbrOfErrors'\nexport * from './getStatus'\nexport * from './getNewGame'\nexport * from './performGuess'\n","compiled":"export*from\"./getLetters\";export*from\"./getNbrOfErrors\";export*from\"./getStatus\";export*from\"./getNewGame\";export*from\"./performGuess\";"},"examples/ChessPiece/ChessPiece.types.js":{"raw":"import pt from 'prop-types'\n\n/**\n * @typedef {'king'|'queen'|'rook'|'bishop'|'knight'|'pawn'} Piece\n * @typedef {'normal'|'available'|'selected'} Mode\n * \n * @typedef {object} ChessPieceProps\n * @prop {Mode} mode\n * @prop {Piece} piece\n */\n\nexport const ChessPieceType = pt.oneOf(['king'|'queen'|'rook'|'bishop'|'knight'|'pawn'])\nexport const ChessPieceMode = pt.oneOf(['normal'|'available'|'selected'])\nexport const ChessPieceProps = pt.shape({\n  mode: ChessPieceMode,\n  piece: ChessPieceType\n})\n","compiled":"import pt from\"prop-types\";/**\n * @typedef {'king'|'queen'|'rook'|'bishop'|'knight'|'pawn'} Piece\n * @typedef {'normal'|'available'|'selected'} Mode\n * \n * @typedef {object} ChessPieceProps\n * @prop {Mode} mode\n * @prop {Piece} piece\n */export var ChessPieceType=pt.oneOf([0]);export var ChessPieceMode=pt.oneOf([0]);export var ChessPieceProps=pt.shape({mode:ChessPieceMode,piece:ChessPieceType});"},"apps/Hangman/logic/getLetters.js":{"raw":"/**\n * @typedef {import(\"../types\").Hangman} Hangman\n *\n * Helper function that takes a Hangman state and returns an array of letters\n * in the answer, masking all non-guessed letters with `null`\n * @param {Hangman} state - A Hangman game state\n * @returns {(string|null)[]} An array of letters/null\n */\nexport function getLetters(state) {\n  return state.guesses.includes(state.answer)\n    ? state.answer.split('')\n    : state.answer\n        .split('')\n        .map(letter => (state.guesses.includes(letter) ? letter : null))\n}\n","compiled":"import\"core-js/modules/es.array.includes\";import\"core-js/modules/es.array.map\";import\"core-js/modules/es.regexp.exec\";import\"core-js/modules/es.string.includes\";import\"core-js/modules/es.string.split\";/**\n * @typedef {import(\"../types\").Hangman} Hangman\n *\n * Helper function that takes a Hangman state and returns an array of letters\n * in the answer, masking all non-guessed letters with `null`\n * @param {Hangman} state - A Hangman game state\n * @returns {(string|null)[]} An array of letters/null\n */export function getLetters(state){return state.guesses.includes(state.answer)?state.answer.split(\"\"):state.answer.split(\"\").map(function(letter){return state.guesses.includes(letter)?letter:null})}"},"apps/Hangman/logic/performGuess.js":{"raw":"import { getStatus } from './getStatus'\n\n/**\n * @typedef {import(\"../types\").Hangman} Hangman\n *\n * The main Hangman game logic. Takes a guess (a letter or a word) and\n * the current state, and returns an updated state\n * @param {string} guess The guess that the player just made\n * @param {Hangman} currentState The state before the guess was made\n * @returns {Hangman} An updated app state\n */\nexport function performGuess(guess, currentState) {\n  if (\n    !guess || // ignore empty guesses\n    currentState.guesses.includes(guess) || // ignore duplicate guesses\n    getStatus(currentState) !== 'playing' // ignore guesses after game end\n  ) {\n    return currentState\n  }\n  return {\n    ...currentState,\n    guesses: currentState.guesses.concat(guess),\n  }\n}\n","compiled":"import\"core-js/modules/es.symbol\";import\"core-js/modules/es.array.concat\";import\"core-js/modules/es.array.filter\";import\"core-js/modules/es.array.for-each\";import\"core-js/modules/es.array.includes\";import\"core-js/modules/es.object.define-property\";import\"core-js/modules/es.object.get-own-property-descriptor\";import\"core-js/modules/es.object.keys\";import\"core-js/modules/es.string.includes\";import\"core-js/modules/web.dom-collections.for-each\";function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null==arguments[i]?{}:arguments[i],ownKeys=Object.keys(source);\"function\"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}import{getStatus}from\"./getStatus\";/**\n * @typedef {import(\"../types\").Hangman} Hangman\n *\n * The main Hangman game logic. Takes a guess (a letter or a word) and\n * the current state, and returns an updated state\n * @param {string} guess The guess that the player just made\n * @param {Hangman} currentState The state before the guess was made\n * @returns {Hangman} An updated app state\n */export function performGuess(guess,currentState){return!guess||// ignore empty guesses\ncurrentState.guesses.includes(guess)||// ignore duplicate guesses\n\"playing\"!==getStatus(currentState)// ignore guesses after game end\n?currentState:_objectSpread({},currentState,{guesses:currentState.guesses.concat(guess)})}"},"apps/Hangman/logic/getNewGame.js":{"raw":"/**\n * @typedef {import(\"../types\").Hangman} Hangman\n *\n * @typedef {object} GetNewGameOptions\n * @prop {string} answer\n * @prop {number} [maxGuesses]\n *\n * Creates a fresh hangman session. Pass in an options object\n * with the correct `answer` and optionally the max number\n * of wrong guesses\n * @param {GetNewGameOptions} options\n * @returns {Hangman} A new Hangman app state\n */\nexport const getNewGame = options => ({\n  answer: options.answer,\n  maxGuesses: options.maxGuesses || 4,\n  guesses: [],\n})\n","compiled":"/**\n * @typedef {import(\"../types\").Hangman} Hangman\n *\n * @typedef {object} GetNewGameOptions\n * @prop {string} answer\n * @prop {number} [maxGuesses]\n *\n * Creates a fresh hangman session. Pass in an options object\n * with the correct `answer` and optionally the max number\n * of wrong guesses\n * @param {GetNewGameOptions} options\n * @returns {Hangman} A new Hangman app state\n */export var getNewGame=function(options){return{answer:options.answer,maxGuesses:options.maxGuesses||4,guesses:[]}};"},"apps/Hangman/logic/getStatus.js":{"raw":"import { getNbrOfErrors } from './getNbrOfErrors'\n\n/**\n * @typedef {import(\"../types\").Hangman} Hangman\n * @typedef {import(\"../types\").HangmanStatus} HangmanStatus\n *\n * Helper function that takes a Hangman state and returns whether the\n * the current status is `won`, `lost` or `playing`\n * @param {Hangman} state\n * @return {HangmanStatus}\n */\nexport function getStatus(state) {\n  if (getNbrOfErrors(state) >= state.maxGuesses) return 'lost'\n  if (state.guesses.includes(state.answer)) return 'won'\n  if (state.answer.split('').every(letter => state.guesses.includes(letter)))\n    return 'won'\n  return 'playing'\n}\n","compiled":"import\"core-js/modules/es.array.every\";import\"core-js/modules/es.array.includes\";import\"core-js/modules/es.regexp.exec\";import\"core-js/modules/es.string.includes\";import\"core-js/modules/es.string.split\";import{getNbrOfErrors}from\"./getNbrOfErrors\";/**\n * @typedef {import(\"../types\").Hangman} Hangman\n * @typedef {import(\"../types\").HangmanStatus} HangmanStatus\n *\n * Helper function that takes a Hangman state and returns whether the\n * the current status is `won`, `lost` or `playing`\n * @param {Hangman} state\n * @return {HangmanStatus}\n */export function getStatus(state){return getNbrOfErrors(state)>=state.maxGuesses?\"lost\":state.guesses.includes(state.answer)?\"won\":state.answer.split(\"\").every(function(letter){return state.guesses.includes(letter)})?\"won\":\"playing\"}"},"apps/Hangman/logic/getNbrOfErrors.js":{"raw":"/**\n * @typedef {import(\"../types\").Hangman} Hangman\n *\n * Helper function that takes a Hangman state and returns the total number\n * of errors in the made guesses\n * @param {Hangman} state - A Hangman game state\n * @returns {number} The number of made guesses that were errors\n */\nexport function getNbrOfErrors(state) {\n  return state.guesses.filter(guess =>\n    guess.length === 1 ? !state.answer.includes(guess) : state.answer !== guess\n  ).length\n}\n","compiled":"import\"core-js/modules/es.array.filter\";import\"core-js/modules/es.array.includes\";import\"core-js/modules/es.string.includes\";/**\n * @typedef {import(\"../types\").Hangman} Hangman\n *\n * Helper function that takes a Hangman state and returns the total number\n * of errors in the made guesses\n * @param {Hangman} state - A Hangman game state\n * @returns {number} The number of made guesses that were errors\n */export function getNbrOfErrors(state){return state.guesses.filter(function(guess){return 1===guess.length?!state.answer.includes(guess):state.answer!==guess}).length}"}},"id":0}